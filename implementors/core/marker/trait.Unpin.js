(function() {var implementors = {};
implementors["aead"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'msg, 'aad&gt; Unpin for Payload&lt;'msg, 'aad&gt;","synthetic":true,"types":[]}];
implementors["aes_gcm"] = [{"text":"impl&lt;B, N&gt; Unpin for AesGcm&lt;B, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["aes_soft"] = [{"text":"impl Unpin for Aes128","synthetic":true,"types":[]},{"text":"impl Unpin for Aes192","synthetic":true,"types":[]},{"text":"impl Unpin for Aes256","synthetic":true,"types":[]}];
implementors["amelio"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for SmtpConfig","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectionCustomizer","synthetic":true,"types":[]},{"text":"impl Unpin for DbConnPool","synthetic":true,"types":[]},{"text":"impl Unpin for DbConn","synthetic":true,"types":[]},{"text":"impl Unpin for InitUserEntity","synthetic":true,"types":[]},{"text":"impl Unpin for NewUserEntity","synthetic":true,"types":[]},{"text":"impl Unpin for UserEntity","synthetic":true,"types":[]},{"text":"impl Unpin for InitCourseEntity","synthetic":true,"types":[]},{"text":"impl Unpin for NewCourseEntity","synthetic":true,"types":[]},{"text":"impl Unpin for CourseEntity","synthetic":true,"types":[]},{"text":"impl Unpin for InitTicketEntity","synthetic":true,"types":[]},{"text":"impl Unpin for NewTicketEntity","synthetic":true,"types":[]},{"text":"impl Unpin for TicketEntity","synthetic":true,"types":[]},{"text":"impl Unpin for MediumTextEntity","synthetic":true,"types":[]},{"text":"impl Unpin for MediumRecordingEntity","synthetic":true,"types":[]},{"text":"impl Unpin for MediumInteractiveEntity","synthetic":true,"types":[]},{"text":"impl Unpin for MediumQuestionaireEntity","synthetic":true,"types":[]},{"text":"impl Unpin for CommentEntity","synthetic":true,"types":[]},{"text":"impl Unpin for NewCommentEntity","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UserRepositoryImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CourseRepositoryImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TicketRepositoryImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for id","synthetic":true,"types":[]},{"text":"impl Unpin for ticket_id","synthetic":true,"types":[]},{"text":"impl Unpin for creator_id","synthetic":true,"types":[]},{"text":"impl Unpin for timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for message","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for id","synthetic":true,"types":[]},{"text":"impl Unpin for code","synthetic":true,"types":[]},{"text":"impl Unpin for title","synthetic":true,"types":[]},{"text":"impl Unpin for author_id","synthetic":true,"types":[]},{"text":"impl Unpin for tutor_id","synthetic":true,"types":[]},{"text":"impl Unpin for active","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for ticket_id","synthetic":true,"types":[]},{"text":"impl Unpin for url","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for ticket_id","synthetic":true,"types":[]},{"text":"impl Unpin for question","synthetic":true,"types":[]},{"text":"impl Unpin for answer","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for ticket_id","synthetic":true,"types":[]},{"text":"impl Unpin for time","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for ticket_id","synthetic":true,"types":[]},{"text":"impl Unpin for page","synthetic":true,"types":[]},{"text":"impl Unpin for line","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for id","synthetic":true,"types":[]},{"text":"impl Unpin for created","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for id","synthetic":true,"types":[]},{"text":"impl Unpin for type_","synthetic":true,"types":[]},{"text":"impl Unpin for title","synthetic":true,"types":[]},{"text":"impl Unpin for description","synthetic":true,"types":[]},{"text":"impl Unpin for category","synthetic":true,"types":[]},{"text":"impl Unpin for priority","synthetic":true,"types":[]},{"text":"impl Unpin for status","synthetic":true,"types":[]},{"text":"impl Unpin for forwarded","synthetic":true,"types":[]},{"text":"impl Unpin for course_id","synthetic":true,"types":[]},{"text":"impl Unpin for creator_id","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for star","synthetic":true,"types":[]},{"text":"impl Unpin for id","synthetic":true,"types":[]},{"text":"impl Unpin for username","synthetic":true,"types":[]},{"text":"impl Unpin for password","synthetic":true,"types":[]},{"text":"impl Unpin for name","synthetic":true,"types":[]},{"text":"impl Unpin for role","synthetic":true,"types":[]},{"text":"impl Unpin for active","synthetic":true,"types":[]},{"text":"impl Unpin for code","synthetic":true,"types":[]},{"text":"impl Unpin for table","synthetic":true,"types":[]},{"text":"impl Unpin for _Dummy","synthetic":true,"types":[]},{"text":"impl Unpin for EmbeddedMigration","synthetic":true,"types":[]},{"text":"impl Unpin for DbMigrations","synthetic":true,"types":[]},{"text":"impl Unpin for Samples","synthetic":true,"types":[]},{"text":"impl Unpin for TicketData","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Mail&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SmtpSender&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StatusDetails&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CommentDetails&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MailRendererImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Csp","synthetic":true,"types":[]},{"text":"impl Unpin for Auth","synthetic":true,"types":[]},{"text":"impl Unpin for HasherImpl","synthetic":true,"types":[]},{"text":"impl Unpin for Role","synthetic":true,"types":[]},{"text":"impl Unpin for User","synthetic":true,"types":[]},{"text":"impl Unpin for NewUser","synthetic":true,"types":[]},{"text":"impl Unpin for EditUser","synthetic":true,"types":[]},{"text":"impl Unpin for Course","synthetic":true,"types":[]},{"text":"impl Unpin for NewCourse","synthetic":true,"types":[]},{"text":"impl Unpin for EditCourse","synthetic":true,"types":[]},{"text":"impl Unpin for CourseWithNames","synthetic":true,"types":[]},{"text":"impl Unpin for TicketType","synthetic":true,"types":[]},{"text":"impl Unpin for MediumType","synthetic":true,"types":[]},{"text":"impl Unpin for Category","synthetic":true,"types":[]},{"text":"impl Unpin for Priority","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl Unpin for Ticket","synthetic":true,"types":[]},{"text":"impl Unpin for TicketWithNames","synthetic":true,"types":[]},{"text":"impl Unpin for TicketWithRels","synthetic":true,"types":[]},{"text":"impl Unpin for Medium","synthetic":true,"types":[]},{"text":"impl Unpin for NewTicket","synthetic":true,"types":[]},{"text":"impl Unpin for EditTicket","synthetic":true,"types":[]},{"text":"impl Unpin for NewMedium","synthetic":true,"types":[]},{"text":"impl Unpin for Comment","synthetic":true,"types":[]},{"text":"impl Unpin for CommentWithNames","synthetic":true,"types":[]},{"text":"impl Unpin for NewComment","synthetic":true,"types":[]},{"text":"impl Unpin for TicketSearch","synthetic":true,"types":[]},{"text":"impl Unpin for AuthUser","synthetic":true,"types":[]},{"text":"impl Unpin for NoUser","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AdminUser&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AuthorUser&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TutorUser&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StudentUser&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IfNoneMatch&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Assets","synthetic":true,"types":[]},{"text":"impl Unpin for Login","synthetic":true,"types":[]},{"text":"impl Unpin for NewCourse","synthetic":true,"types":[]},{"text":"impl Unpin for EditCourse","synthetic":true,"types":[]},{"text":"impl Unpin for NewTicketData","synthetic":true,"types":[]},{"text":"impl Unpin for NewTicket","synthetic":true,"types":[]},{"text":"impl Unpin for Medium","synthetic":true,"types":[]},{"text":"impl Unpin for EditResponse","synthetic":true,"types":[]},{"text":"impl Unpin for EditTicket","synthetic":true,"types":[]},{"text":"impl Unpin for NewComment","synthetic":true,"types":[]},{"text":"impl Unpin for SearchOptions","synthetic":true,"types":[]},{"text":"impl Unpin for NewUser","synthetic":true,"types":[]},{"text":"impl Unpin for Activate","synthetic":true,"types":[]},{"text":"impl Unpin for EditUser","synthetic":true,"types":[]},{"text":"impl Unpin for ServerError","synthetic":true,"types":[]},{"text":"impl Unpin for NonEmptyString","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for PositiveNum&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Hour","synthetic":true,"types":[]},{"text":"impl Unpin for Minute","synthetic":true,"types":[]},{"text":"impl Unpin for ValidUrl","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Credentials&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, H&gt; Unpin for LoginServiceImpl&lt;R, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, MS, MR, H&gt; Unpin for UserServiceImpl&lt;R, MS, MR, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;H: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;MR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;MS: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;UR, CR&gt; Unpin for CourseServiceImpl&lt;UR, CR&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;UR: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;TR, CR, UR, MS, MR&gt; Unpin for TicketServiceImpl&lt;TR, CR, UR, MS, MR&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;MR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;MS: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;TR: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;UR: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MessageCode","synthetic":true,"types":[]},{"text":"impl Unpin for Index","synthetic":true,"types":[]},{"text":"impl Unpin for Login","synthetic":true,"types":[]},{"text":"impl Unpin for Faq","synthetic":true,"types":[]},{"text":"impl Unpin for Users","synthetic":true,"types":[]},{"text":"impl Unpin for NewUser","synthetic":true,"types":[]},{"text":"impl Unpin for ActivateUser","synthetic":true,"types":[]},{"text":"impl Unpin for EditUser","synthetic":true,"types":[]},{"text":"impl Unpin for Courses","synthetic":true,"types":[]},{"text":"impl Unpin for NewCourse","synthetic":true,"types":[]},{"text":"impl Unpin for EditCourse","synthetic":true,"types":[]},{"text":"impl Unpin for NewTicket","synthetic":true,"types":[]},{"text":"impl Unpin for TicketDetail","synthetic":true,"types":[]},{"text":"impl Unpin for SearchTickets","synthetic":true,"types":[]},{"text":"impl Unpin for Error403","synthetic":true,"types":[]},{"text":"impl Unpin for Error404","synthetic":true,"types":[]},{"text":"impl Unpin for Error500","synthetic":true,"types":[]}];
implementors["anyhow"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Chain&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for CapacityError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Index: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, A&gt; Unpin for Drain&lt;'a, A&gt;","synthetic":true,"types":[]}];
implementors["ascii_utils"] = [{"text":"impl Unpin for AsciiError","synthetic":true,"types":[]}];
implementors["askama_escape"] = [{"text":"impl&lt;E, T&gt; Unpin for MarkupDisplay&lt;E, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E, W&gt; Unpin for EscapeWriter&lt;'a, E, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for Escaped&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Html","synthetic":true,"types":[]},{"text":"impl Unpin for Text","synthetic":true,"types":[]}];
implementors["askama_shared"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for TemplateLoop&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Iterator&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for LoopItem","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Syntax&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Integrations","synthetic":true,"types":[]},{"text":"impl Unpin for CompileError","synthetic":true,"types":[]}];
implementors["atty"] = [{"text":"impl Unpin for Stream","synthetic":true,"types":[]}];
implementors["base64"] = [{"text":"impl&lt;'a&gt; Unpin for Base64Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for EncoderWriter&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DecodeError","synthetic":true,"types":[]},{"text":"impl Unpin for CharacterSet","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]}];
implementors["bcrypt"] = [{"text":"impl Unpin for BcryptError","synthetic":true,"types":[]},{"text":"impl Unpin for HashParts","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]}];
implementors["bitvec"] = [{"text":"impl&lt;'a, O, T&gt; Unpin for BitDomain&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for BitDomainMut&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Domain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for DomainMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitIdx&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitTail&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitPos&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitSel&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BitMask&lt;R&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Msb0","synthetic":true,"types":[]},{"text":"impl Unpin for Lsb0","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for Iter&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for IterMut&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as BitStore&gt;::Alias as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for Windows&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for Chunks&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for ChunksMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for ChunksExact&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for ChunksExactMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for RChunks&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for RChunksMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for RChunksExact&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for RChunksExactMut&lt;'a, O, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for Split&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for SplitMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for RSplit&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for RSplitMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for SplitN&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for SplitNMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for RSplitN&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, P&gt; Unpin for RSplitNMut&lt;'a, O, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for BitMut&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, T&gt; Unpin for BitSlice&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, T&gt; Unpin for IntoIter&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T&gt; Unpin for Drain&lt;'a, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, O, T, I&gt; Unpin for Splice&lt;'a, O, T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as BitStore&gt;::Mem: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;O, V&gt; Unpin for BitArray&lt;O, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: BitView + Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;O, T&gt; Unpin for BitBox&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;O, T&gt; Unpin for BitVec&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["block_buffer"] = [{"text":"impl&lt;BlockSize&gt; Unpin for BlockBuffer&lt;BlockSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["block_cipher_trait"] = [{"text":"impl Unpin for InvalidKeyLength","synthetic":true,"types":[]}];
implementors["block_padding"] = [{"text":"impl Unpin for PadError","synthetic":true,"types":[]},{"text":"impl Unpin for UnpadError","synthetic":true,"types":[]},{"text":"impl Unpin for ZeroPadding","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7","synthetic":true,"types":[]},{"text":"impl Unpin for AnsiX923","synthetic":true,"types":[]},{"text":"impl Unpin for Iso7816","synthetic":true,"types":[]},{"text":"impl Unpin for NoPadding","synthetic":true,"types":[]}];
implementors["blowfish"] = [{"text":"impl&lt;T&gt; Unpin for Blowfish&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["bufstream"] = [{"text":"impl&lt;S&gt; Unpin for BufStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for IntoInnerError&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["byteorder"] = [{"text":"impl Unpin for BigEndian","synthetic":true,"types":[]},{"text":"impl Unpin for LittleEndian","synthetic":true,"types":[]}];
implementors["chrono"] = [{"text":"impl Unpin for FixedOffset","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Utc","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LocalResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveDate","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveDateTime","synthetic":true,"types":[]},{"text":"impl Unpin for IsoWeek","synthetic":true,"types":[]},{"text":"impl Unpin for NaiveTime","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Unpin for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SecondsFormat","synthetic":true,"types":[]},{"text":"impl&lt;Tz&gt; Unpin for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Parsed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StrftimeItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Pad","synthetic":true,"types":[]},{"text":"impl Unpin for Numeric","synthetic":true,"types":[]},{"text":"impl Unpin for InternalNumeric","synthetic":true,"types":[]},{"text":"impl Unpin for Fixed","synthetic":true,"types":[]},{"text":"impl Unpin for InternalFixed","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Item&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for DelayedFormat&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RoundingError","synthetic":true,"types":[]},{"text":"impl Unpin for Weekday","synthetic":true,"types":[]},{"text":"impl Unpin for ParseWeekdayError","synthetic":true,"types":[]},{"text":"impl Unpin for Month","synthetic":true,"types":[]},{"text":"impl Unpin for ParseMonthError","synthetic":true,"types":[]}];
implementors["chrono_tz"] = [{"text":"impl Unpin for Tz","synthetic":true,"types":[]}];
implementors["cipher"] = [{"text":"impl Unpin for InvalidKeyLength","synthetic":true,"types":[]},{"text":"impl Unpin for LoopError","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidKeyNonceLength","synthetic":true,"types":[]},{"text":"impl Unpin for OverflowError","synthetic":true,"types":[]}];
implementors["cookie"] = [{"text":"impl Unpin for CookieBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl Unpin for CookieJar","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Delta&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SameSite","synthetic":true,"types":[]},{"text":"impl Unpin for Key","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PrivateJar&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SignedJar&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Unpin for Cookie&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'c&gt; Unpin for EncodedCookie&lt;'a, 'c&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'c: 'a,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["crypto_mac"] = [{"text":"impl Unpin for MacError","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidKeyLength","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; Unpin for MacResult&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["ctrlc"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for SignalType","synthetic":true,"types":[]}];
implementors["devise_core"] = [{"text":"impl&lt;'p&gt; Unpin for FieldParent&lt;'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p&gt; Unpin for Fields&lt;'p&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for Field&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DeriveGenerator","synthetic":true,"types":[]},{"text":"impl Unpin for GenericSupport","synthetic":true,"types":[]},{"text":"impl Unpin for DataSupport","synthetic":true,"types":[]},{"text":"impl&lt;'p, T&gt; Unpin for Derived&lt;'p, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MetaItem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MetaItemList&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for SpanWrapped&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for GenericKind","synthetic":true,"types":[]}];
implementors["diesel"] = [{"text":"impl Unpin for AnsiTransactionManager","synthetic":true,"types":[]},{"text":"impl Unpin for now","synthetic":true,"types":[]},{"text":"impl&lt;ST, T&gt; Unpin for SqlLiteral&lt;ST, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ST: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Query, Value&gt; Unpin for UncheckedBind&lt;Query, Value&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Query: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Value: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, DB&gt; Unpin for AstPass&lt;'a, DB&gt;","synthetic":true,"types":[]},{"text":"impl&lt;DB&gt; Unpin for RawBytesBindCollector&lt;DB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;DB as TypeMetadata&gt;::TypeMetadata: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, DB&gt; Unpin for DebugQuery&lt;'a, T, DB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DB: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U, Ret&gt; Unpin for DeleteStatement&lt;T, U, Ret&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ret: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Op&gt; Unpin for IncompleteInsertStatement&lt;T, Op&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Op: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U, Op, Ret&gt; Unpin for InsertStatement&lt;T, U, Op, Ret&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Op: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ret: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SqlQuery","synthetic":true,"types":[]},{"text":"impl&lt;T, U, V, Ret&gt; Unpin for UpdateStatement&lt;T, U, V, Ret&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Ret: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Never","synthetic":true,"types":[]},{"text":"impl Unpin for Once","synthetic":true,"types":[]},{"text":"impl Unpin for MoreThanOnce","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for ConnectionManager&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for DatabaseErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectionError","synthetic":true,"types":[]},{"text":"impl Unpin for UnexpectedNullError","synthetic":true,"types":[]},{"text":"impl Unpin for IsNull","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, DB&gt; Unpin for Output&lt;'a, T, DB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Bool","synthetic":true,"types":[]},{"text":"impl Unpin for TinyInt","synthetic":true,"types":[]},{"text":"impl Unpin for SmallInt","synthetic":true,"types":[]},{"text":"impl Unpin for Integer","synthetic":true,"types":[]},{"text":"impl Unpin for BigInt","synthetic":true,"types":[]},{"text":"impl Unpin for Float","synthetic":true,"types":[]},{"text":"impl Unpin for Double","synthetic":true,"types":[]},{"text":"impl Unpin for Numeric","synthetic":true,"types":[]},{"text":"impl Unpin for Text","synthetic":true,"types":[]},{"text":"impl Unpin for Binary","synthetic":true,"types":[]},{"text":"impl Unpin for Date","synthetic":true,"types":[]},{"text":"impl Unpin for Interval","synthetic":true,"types":[]},{"text":"impl Unpin for Time","synthetic":true,"types":[]},{"text":"impl Unpin for Timestamp","synthetic":true,"types":[]},{"text":"impl&lt;ST&gt; Unpin for Nullable&lt;ST&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;ST: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MigrationError","synthetic":true,"types":[]},{"text":"impl Unpin for RunMigrationsError","synthetic":true,"types":[]},{"text":"impl Unpin for Sqlite","synthetic":true,"types":[]},{"text":"impl Unpin for SqliteType","synthetic":true,"types":[]},{"text":"impl Unpin for SqliteConnection","synthetic":true,"types":[]},{"text":"impl Unpin for SqliteQueryBuilder","synthetic":true,"types":[]}];
implementors["digest"] = [{"text":"impl Unpin for InvalidOutputSize","synthetic":true,"types":[]}];
implementors["dotenv"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["email"] = [{"text":"impl&lt;'s&gt; Unpin for Rfc5322Parser&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Rfc5322Builder","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Unpin for Rfc2045Parser&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Unpin for Rfc822DateParser&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for MimeContentTypeHeader","synthetic":true,"types":[]},{"text":"impl Unpin for MimeContentTransferEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ParsingError","synthetic":true,"types":[]},{"text":"impl Unpin for Header","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Unpin for HeaderIter&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for HeaderMap","synthetic":true,"types":[]},{"text":"impl Unpin for Address","synthetic":true,"types":[]},{"text":"impl Unpin for Mailbox","synthetic":true,"types":[]},{"text":"impl Unpin for MimeMultipartType","synthetic":true,"types":[]},{"text":"impl Unpin for MimeMessage","synthetic":true,"types":[]}];
implementors["encoding"] = [{"text":"impl Unpin for CodecError","synthetic":true,"types":[]},{"text":"impl Unpin for DecoderTrap","synthetic":true,"types":[]},{"text":"impl Unpin for EncoderTrap","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorDecoder","synthetic":true,"types":[]},{"text":"impl Unpin for ASCIIEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ASCIIEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for ASCIIDecoder","synthetic":true,"types":[]},{"text":"impl Unpin for SingleByteEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for SingleByteEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for SingleByteDecoder","synthetic":true,"types":[]},{"text":"impl Unpin for UTF8Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for UTF8Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for UTF8Decoder","synthetic":true,"types":[]},{"text":"impl Unpin for Little","synthetic":true,"types":[]},{"text":"impl Unpin for Big","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UTF16Encoding&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UTF16Encoder&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UTF16Decoder&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Windows949Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for Windows949Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for EUCJPEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for EUCJPEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for Windows31JEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for Windows31JEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for ISO2022JPEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ISO2022JPEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for GBK","synthetic":true,"types":[]},{"text":"impl Unpin for GB18030","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for GBEncoding&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for GBEncoder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HZEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for HZEncoder","synthetic":true,"types":[]},{"text":"impl Unpin for BigFive2003Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for BigFive2003Encoder","synthetic":true,"types":[]},{"text":"impl Unpin for EncoderOnlyUTF8Encoding","synthetic":true,"types":[]}];
implementors["fake_simd"] = [{"text":"impl Unpin for u32x4","synthetic":true,"types":[]},{"text":"impl Unpin for u64x2","synthetic":true,"types":[]}];
implementors["fast_chemail"] = [{"text":"impl Unpin for ParseError","synthetic":true,"types":[]}];
implementors["fnv"] = [{"text":"impl Unpin for FnvHasher","synthetic":true,"types":[]}];
implementors["foreign_types_shared"] = [{"text":"impl Unpin for Opaque","synthetic":true,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Unpin for Parse&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseIntoOwned&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ByteSerialize&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Serializer&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T, N&gt; Unpin for GenericArrayIter&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as ArrayLength&lt;T&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for GenericArray&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;U as ArrayLength&lt;T&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["getrandom"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["ghash"] = [{"text":"impl Unpin for GHash","synthetic":true,"types":[]}];
implementors["glob"] = [{"text":"impl Unpin for Paths","synthetic":true,"types":[]},{"text":"impl Unpin for GlobError","synthetic":true,"types":[]},{"text":"impl Unpin for PatternError","synthetic":true,"types":[]},{"text":"impl Unpin for Pattern","synthetic":true,"types":[]},{"text":"impl Unpin for MatchOptions","synthetic":true,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Unpin for Bucket&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RawTable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RawIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RawIntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for RawDrain&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for RawIterHash&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DefaultHashBuilder","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Unpin for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Unpin for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryBuilderMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawOccupiedEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawVacantEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for RawEntryBuilder&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for Entry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for OccupiedEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Unpin for VacantEntry&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Iter&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Unpin for IntoIter&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Unpin for Drain&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, F&gt; Unpin for DrainFilter&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for SymmetricDifference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TryReserveError","synthetic":true,"types":[]}];
implementors["hkdf"] = [{"text":"impl Unpin for InvalidPrkLength","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidLength","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Unpin for Hkdf&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as BlockInput&gt;::BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["hmac"] = [{"text":"impl&lt;D&gt; Unpin for Hmac&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;D as BlockInput&gt;::BlockSize as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["httparse"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for InvalidChunkSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Status&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Unpin for Request&lt;'headers, 'buf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'buf: 'headers,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'headers, 'buf&gt; Unpin for Response&lt;'headers, 'buf&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'buf: 'headers,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Header&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["humansize"] = [{"text":"impl Unpin for Kilo","synthetic":true,"types":[]},{"text":"impl Unpin for FixedAt","synthetic":true,"types":[]},{"text":"impl Unpin for FileSizeOpts","synthetic":true,"types":[]}];
implementors["hyper"] = [{"text":"impl&lt;C&gt; Unpin for Pool&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for PooledStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for Request&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Response","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RequestBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Body&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C, S&gt; Unpin for ProxyConfig&lt;C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RedirectPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Method","synthetic":true,"types":[]},{"text":"impl Unpin for Accept","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlAllowCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlAllowHeaders","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlAllowMethods","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlAllowOrigin","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlExposeHeaders","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlMaxAge","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlRequestHeaders","synthetic":true,"types":[]},{"text":"impl Unpin for AccessControlRequestMethod","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptCharset","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptLanguage","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptRanges","synthetic":true,"types":[]},{"text":"impl Unpin for RangeUnit","synthetic":true,"types":[]},{"text":"impl Unpin for Allow","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Authorization&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Basic","synthetic":true,"types":[]},{"text":"impl Unpin for Bearer","synthetic":true,"types":[]},{"text":"impl Unpin for CacheControl","synthetic":true,"types":[]},{"text":"impl Unpin for CacheDirective","synthetic":true,"types":[]},{"text":"impl Unpin for Cookie","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectionOption","synthetic":true,"types":[]},{"text":"impl Unpin for Connection","synthetic":true,"types":[]},{"text":"impl Unpin for DispositionType","synthetic":true,"types":[]},{"text":"impl Unpin for DispositionParam","synthetic":true,"types":[]},{"text":"impl Unpin for ContentDisposition","synthetic":true,"types":[]},{"text":"impl Unpin for ContentEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for ContentLanguage","synthetic":true,"types":[]},{"text":"impl Unpin for ContentLength","synthetic":true,"types":[]},{"text":"impl Unpin for ContentRange","synthetic":true,"types":[]},{"text":"impl Unpin for ContentRangeSpec","synthetic":true,"types":[]},{"text":"impl Unpin for ContentType","synthetic":true,"types":[]},{"text":"impl Unpin for Date","synthetic":true,"types":[]},{"text":"impl Unpin for ETag","synthetic":true,"types":[]},{"text":"impl Unpin for Expect","synthetic":true,"types":[]},{"text":"impl Unpin for Expires","synthetic":true,"types":[]},{"text":"impl Unpin for From","synthetic":true,"types":[]},{"text":"impl Unpin for Host","synthetic":true,"types":[]},{"text":"impl Unpin for IfMatch","synthetic":true,"types":[]},{"text":"impl Unpin for IfModifiedSince","synthetic":true,"types":[]},{"text":"impl Unpin for IfNoneMatch","synthetic":true,"types":[]},{"text":"impl Unpin for IfRange","synthetic":true,"types":[]},{"text":"impl Unpin for IfUnmodifiedSince","synthetic":true,"types":[]},{"text":"impl Unpin for LastModified","synthetic":true,"types":[]},{"text":"impl Unpin for Location","synthetic":true,"types":[]},{"text":"impl Unpin for Origin","synthetic":true,"types":[]},{"text":"impl Unpin for Pragma","synthetic":true,"types":[]},{"text":"impl Unpin for Prefer","synthetic":true,"types":[]},{"text":"impl Unpin for Preference","synthetic":true,"types":[]},{"text":"impl Unpin for PreferenceApplied","synthetic":true,"types":[]},{"text":"impl Unpin for Range","synthetic":true,"types":[]},{"text":"impl Unpin for ByteRangeSpec","synthetic":true,"types":[]},{"text":"impl Unpin for Referer","synthetic":true,"types":[]},{"text":"impl Unpin for ReferrerPolicy","synthetic":true,"types":[]},{"text":"impl Unpin for Server","synthetic":true,"types":[]},{"text":"impl Unpin for SetCookie","synthetic":true,"types":[]},{"text":"impl Unpin for StrictTransportSecurity","synthetic":true,"types":[]},{"text":"impl Unpin for TransferEncoding","synthetic":true,"types":[]},{"text":"impl Unpin for Upgrade","synthetic":true,"types":[]},{"text":"impl Unpin for ProtocolName","synthetic":true,"types":[]},{"text":"impl Unpin for Protocol","synthetic":true,"types":[]},{"text":"impl Unpin for UserAgent","synthetic":true,"types":[]},{"text":"impl Unpin for Vary","synthetic":true,"types":[]},{"text":"impl Unpin for Link","synthetic":true,"types":[]},{"text":"impl Unpin for LinkValue","synthetic":true,"types":[]},{"text":"impl Unpin for MediaDesc","synthetic":true,"types":[]},{"text":"impl Unpin for RelationType","synthetic":true,"types":[]},{"text":"impl Unpin for Charset","synthetic":true,"types":[]},{"text":"impl Unpin for Encoding","synthetic":true,"types":[]},{"text":"impl Unpin for EntityTag","synthetic":true,"types":[]},{"text":"impl Unpin for HttpDate","synthetic":true,"types":[]},{"text":"impl Unpin for Quality","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for QualityItem&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedValue","synthetic":true,"types":[]},{"text":"impl Unpin for HTTP_VALUE","synthetic":true,"types":[]},{"text":"impl Unpin for Headers","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for HeadersItems&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for HeaderView&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, H&gt; Unpin for HeaderFormatter&lt;'a, H&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Http11Message","synthetic":true,"types":[]},{"text":"impl Unpin for Http11Protocol","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for HttpReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for HttpWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for EndError&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for Incoming&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RequestHead","synthetic":true,"types":[]},{"text":"impl Unpin for ResponseHead","synthetic":true,"types":[]},{"text":"impl Unpin for RawStatus","synthetic":true,"types":[]},{"text":"impl Unpin for Fresh","synthetic":true,"types":[]},{"text":"impl Unpin for Streaming","synthetic":true,"types":[]},{"text":"impl&lt;'a, N&gt; Unpin for NetworkConnections&lt;'a, N&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for HttpListener","synthetic":true,"types":[]},{"text":"impl Unpin for HttpStream","synthetic":true,"types":[]},{"text":"impl Unpin for HttpConnector","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for HttpsStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for HttpsListener&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, C&gt; Unpin for HttpsConnector&lt;S, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b&gt; Unpin for Request&lt;'a, 'b&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'b: 'a,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; Unpin for Response&lt;'a, W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;L&gt; Unpin for Server&lt;L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Listening","synthetic":true,"types":[]},{"text":"impl Unpin for StatusCode","synthetic":true,"types":[]},{"text":"impl Unpin for StatusClass","synthetic":true,"types":[]},{"text":"impl Unpin for RequestUri","synthetic":true,"types":[]},{"text":"impl Unpin for HttpVersion","synthetic":true,"types":[]}];
implementors["idna"] = [{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for Errors","synthetic":true,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;'a, K, V&gt; Unpin for OccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Unpin for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Unpin for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S1, S2&gt; Unpin for SymmetricDifference&lt;'a, T, S1, S2&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Unpin for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["language_tags"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for LanguageTag","synthetic":true,"types":[]}];
implementors["lettre"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Credentials","synthetic":true,"types":[]},{"text":"impl Unpin for Mechanism","synthetic":true,"types":[]},{"text":"impl Unpin for MockStream","synthetic":true,"types":[]},{"text":"impl Unpin for ClientTlsParameters","synthetic":true,"types":[]},{"text":"impl Unpin for NetworkStream","synthetic":true,"types":[]},{"text":"impl Unpin for ClientCodec","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for InnerClient&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EhloCommand","synthetic":true,"types":[]},{"text":"impl Unpin for StarttlsCommand","synthetic":true,"types":[]},{"text":"impl Unpin for MailCommand","synthetic":true,"types":[]},{"text":"impl Unpin for RcptCommand","synthetic":true,"types":[]},{"text":"impl Unpin for DataCommand","synthetic":true,"types":[]},{"text":"impl Unpin for QuitCommand","synthetic":true,"types":[]},{"text":"impl Unpin for NoopCommand","synthetic":true,"types":[]},{"text":"impl Unpin for HelpCommand","synthetic":true,"types":[]},{"text":"impl Unpin for VrfyCommand","synthetic":true,"types":[]},{"text":"impl Unpin for ExpnCommand","synthetic":true,"types":[]},{"text":"impl Unpin for RsetCommand","synthetic":true,"types":[]},{"text":"impl Unpin for AuthCommand","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for ClientId","synthetic":true,"types":[]},{"text":"impl Unpin for Extension","synthetic":true,"types":[]},{"text":"impl Unpin for ServerInfo","synthetic":true,"types":[]},{"text":"impl Unpin for MailParameter","synthetic":true,"types":[]},{"text":"impl Unpin for MailBodyParameter","synthetic":true,"types":[]},{"text":"impl Unpin for RcptParameter","synthetic":true,"types":[]},{"text":"impl Unpin for Severity","synthetic":true,"types":[]},{"text":"impl Unpin for Category","synthetic":true,"types":[]},{"text":"impl Unpin for Detail","synthetic":true,"types":[]},{"text":"impl Unpin for Code","synthetic":true,"types":[]},{"text":"impl Unpin for Response","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for XText&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ClientSecurity","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectionReuseParameters","synthetic":true,"types":[]},{"text":"impl Unpin for SmtpClient","synthetic":true,"types":[]},{"text":"impl Unpin for SmtpTransport","synthetic":true,"types":[]},{"text":"impl Unpin for StubTransport","synthetic":true,"types":[]},{"text":"impl Unpin for EmailAddress","synthetic":true,"types":[]},{"text":"impl Unpin for Envelope","synthetic":true,"types":[]},{"text":"impl Unpin for Message","synthetic":true,"types":[]},{"text":"impl Unpin for SendableEmail","synthetic":true,"types":[]}];
implementors["lettre_email"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for PartBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for EmailBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Email","synthetic":true,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl Unpin for statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for max_align_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigaction","synthetic":true,"types":[]},{"text":"impl Unpin for statfs","synthetic":true,"types":[]},{"text":"impl Unpin for flock","synthetic":true,"types":[]},{"text":"impl Unpin for flock64","synthetic":true,"types":[]},{"text":"impl Unpin for siginfo_t","synthetic":true,"types":[]},{"text":"impl Unpin for stack_t","synthetic":true,"types":[]},{"text":"impl Unpin for stat","synthetic":true,"types":[]},{"text":"impl Unpin for stat64","synthetic":true,"types":[]},{"text":"impl Unpin for statfs64","synthetic":true,"types":[]},{"text":"impl Unpin for statvfs64","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Unpin for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Unpin for user_regs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for user","synthetic":true,"types":[]},{"text":"impl Unpin for mcontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for ipc_perm","synthetic":true,"types":[]},{"text":"impl Unpin for shmid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for termios2","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Unpin for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl Unpin for ucontext_t","synthetic":true,"types":[]},{"text":"impl Unpin for sigset_t","synthetic":true,"types":[]},{"text":"impl Unpin for sysinfo","synthetic":true,"types":[]},{"text":"impl Unpin for msqid_ds","synthetic":true,"types":[]},{"text":"impl Unpin for sem_t","synthetic":true,"types":[]},{"text":"impl Unpin for statx","synthetic":true,"types":[]},{"text":"impl Unpin for statx_timestamp","synthetic":true,"types":[]},{"text":"impl Unpin for aiocb","synthetic":true,"types":[]},{"text":"impl Unpin for __exit_status","synthetic":true,"types":[]},{"text":"impl Unpin for __timeval","synthetic":true,"types":[]},{"text":"impl Unpin for glob64_t","synthetic":true,"types":[]},{"text":"impl Unpin for msghdr","synthetic":true,"types":[]},{"text":"impl Unpin for cmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for termios","synthetic":true,"types":[]},{"text":"impl Unpin for mallinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Unpin for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Unpin for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Unpin for nlattr","synthetic":true,"types":[]},{"text":"impl Unpin for rtentry","synthetic":true,"types":[]},{"text":"impl Unpin for timex","synthetic":true,"types":[]},{"text":"impl Unpin for ntptimeval","synthetic":true,"types":[]},{"text":"impl Unpin for regex_t","synthetic":true,"types":[]},{"text":"impl Unpin for utmpx","synthetic":true,"types":[]},{"text":"impl Unpin for fpos64_t","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit64","synthetic":true,"types":[]},{"text":"impl Unpin for glob_t","synthetic":true,"types":[]},{"text":"impl Unpin for passwd","synthetic":true,"types":[]},{"text":"impl Unpin for spwd","synthetic":true,"types":[]},{"text":"impl Unpin for dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Unpin for itimerspec","synthetic":true,"types":[]},{"text":"impl Unpin for fsid_t","synthetic":true,"types":[]},{"text":"impl Unpin for packet_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Unpin for if_nameindex","synthetic":true,"types":[]},{"text":"impl Unpin for msginfo","synthetic":true,"types":[]},{"text":"impl Unpin for sembuf","synthetic":true,"types":[]},{"text":"impl Unpin for input_event","synthetic":true,"types":[]},{"text":"impl Unpin for input_id","synthetic":true,"types":[]},{"text":"impl Unpin for input_absinfo","synthetic":true,"types":[]},{"text":"impl Unpin for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Unpin for input_mask","synthetic":true,"types":[]},{"text":"impl Unpin for ff_replay","synthetic":true,"types":[]},{"text":"impl Unpin for ff_trigger","synthetic":true,"types":[]},{"text":"impl Unpin for ff_envelope","synthetic":true,"types":[]},{"text":"impl Unpin for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Unpin for ff_effect","synthetic":true,"types":[]},{"text":"impl Unpin for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Unpin for ucred","synthetic":true,"types":[]},{"text":"impl Unpin for mntent","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Unpin for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for arpd_request","synthetic":true,"types":[]},{"text":"impl Unpin for inotify_event","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_response","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Unpin for regmatch_t","synthetic":true,"types":[]},{"text":"impl Unpin for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Unpin for dirent","synthetic":true,"types":[]},{"text":"impl Unpin for dirent64","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Unpin for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Unpin for mq_attr","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Unpin for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Unpin for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Unpin for timezone","synthetic":true,"types":[]},{"text":"impl Unpin for in_addr","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Unpin for addrinfo","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Unpin for fd_set","synthetic":true,"types":[]},{"text":"impl Unpin for tm","synthetic":true,"types":[]},{"text":"impl Unpin for sched_param","synthetic":true,"types":[]},{"text":"impl Unpin for Dl_info","synthetic":true,"types":[]},{"text":"impl Unpin for lconv","synthetic":true,"types":[]},{"text":"impl Unpin for in_pktinfo","synthetic":true,"types":[]},{"text":"impl Unpin for ifaddrs","synthetic":true,"types":[]},{"text":"impl Unpin for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq","synthetic":true,"types":[]},{"text":"impl Unpin for arpreq_old","synthetic":true,"types":[]},{"text":"impl Unpin for arphdr","synthetic":true,"types":[]},{"text":"impl Unpin for mmsghdr","synthetic":true,"types":[]},{"text":"impl Unpin for epoll_event","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Unpin for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Unpin for utsname","synthetic":true,"types":[]},{"text":"impl Unpin for sigevent","synthetic":true,"types":[]},{"text":"impl Unpin for in6_addr","synthetic":true,"types":[]},{"text":"impl Unpin for DIR","synthetic":true,"types":[]},{"text":"impl Unpin for group","synthetic":true,"types":[]},{"text":"impl Unpin for utimbuf","synthetic":true,"types":[]},{"text":"impl Unpin for timeval","synthetic":true,"types":[]},{"text":"impl Unpin for timespec","synthetic":true,"types":[]},{"text":"impl Unpin for rlimit","synthetic":true,"types":[]},{"text":"impl Unpin for rusage","synthetic":true,"types":[]},{"text":"impl Unpin for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Unpin for hostent","synthetic":true,"types":[]},{"text":"impl Unpin for iovec","synthetic":true,"types":[]},{"text":"impl Unpin for pollfd","synthetic":true,"types":[]},{"text":"impl Unpin for winsize","synthetic":true,"types":[]},{"text":"impl Unpin for linger","synthetic":true,"types":[]},{"text":"impl Unpin for sigval","synthetic":true,"types":[]},{"text":"impl Unpin for itimerval","synthetic":true,"types":[]},{"text":"impl Unpin for tms","synthetic":true,"types":[]},{"text":"impl Unpin for servent","synthetic":true,"types":[]},{"text":"impl Unpin for protoent","synthetic":true,"types":[]},{"text":"impl Unpin for FILE","synthetic":true,"types":[]},{"text":"impl Unpin for fpos_t","synthetic":true,"types":[]}];
implementors["libsqlite3_sys"] = [{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_file","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_io_methods","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_mutex","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_api_routines","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_vfs","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_mem_methods","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_stmt","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_value","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_context","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_module","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_index_info","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_index_info_sqlite3_index_constraint","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_index_info_sqlite3_index_orderby","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_index_info_sqlite3_index_constraint_usage","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_vtab","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_vtab_cursor","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_blob","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_mutex_methods","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_str","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_pcache","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_pcache_page","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_pcache_methods2","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_pcache_methods","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_backup","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_snapshot","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_rtree_geometry","synthetic":true,"types":[]},{"text":"impl Unpin for sqlite3_rtree_query_info","synthetic":true,"types":[]},{"text":"impl Unpin for Fts5Context","synthetic":true,"types":[]},{"text":"impl Unpin for Fts5PhraseIter","synthetic":true,"types":[]},{"text":"impl Unpin for Fts5ExtensionApi","synthetic":true,"types":[]},{"text":"impl Unpin for Fts5Tokenizer","synthetic":true,"types":[]},{"text":"impl Unpin for fts5_tokenizer","synthetic":true,"types":[]},{"text":"impl Unpin for fts5_api","synthetic":true,"types":[]},{"text":"impl Unpin for Limit","synthetic":true,"types":[]}];
implementors["lock_api"] = [{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for Mutex&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MutexGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawMutex&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedMutexGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, G&gt; Unpin for RawReentrantMutex&lt;R, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutex&lt;R, G, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for ReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, G, T:&nbsp;?Sized&gt; Unpin for MappedReentrantMutexGuard&lt;'a, R, G, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R, T:&nbsp;?Sized&gt; Unpin for RwLock&lt;R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockWriteGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for RwLockUpgradableReadGuard&lt;'a, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as RawRwLock&gt;::GuardMarker: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockReadGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, R, T:&nbsp;?Sized&gt; Unpin for MappedRwLockWriteGuard&lt;'a, R, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GuardSend","synthetic":true,"types":[]},{"text":"impl Unpin for GuardNoSend","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl Unpin for LogLevel","synthetic":true,"types":[]},{"text":"impl Unpin for LogLevelFilter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LogRecord&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LogMetadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LogLocation","synthetic":true,"types":[]},{"text":"impl Unpin for MaxLogLevelFilter","synthetic":true,"types":[]},{"text":"impl Unpin for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownLoggerError","synthetic":true,"types":[]}];
implementors["memchr"] = [{"text":"impl&lt;'a&gt; Unpin for Memchr&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr2&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Memchr3&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["migrations_internals"] = [{"text":"impl&lt;'a&gt; Unpin for MigrationName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for MigrationFileName&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["mime"] = [{"text":"impl&lt;T&gt; Unpin for Mime&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for TopLevel","synthetic":true,"types":[]},{"text":"impl Unpin for SubLevel","synthetic":true,"types":[]},{"text":"impl Unpin for Attr","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]}];
implementors["mime_guess"] = [{"text":"impl Unpin for MimeGuess","synthetic":true,"types":[]},{"text":"impl Unpin for Iter","synthetic":true,"types":[]},{"text":"impl Unpin for IterRaw","synthetic":true,"types":[]}];
implementors["native_tls"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Identity","synthetic":true,"types":[]},{"text":"impl Unpin for Certificate","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MidHandshakeTlsStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Protocol","synthetic":true,"types":[]},{"text":"impl Unpin for TlsConnectorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for TlsConnector","synthetic":true,"types":[]},{"text":"impl Unpin for TlsAcceptorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for TlsAcceptor","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for TlsStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["nix"] = [{"text":"impl Unpin for Dir","synthetic":true,"types":[]},{"text":"impl&lt;'d&gt; Unpin for Iter&lt;'d&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Entry","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Errno","synthetic":true,"types":[]},{"text":"impl Unpin for PosixFadviseAdvice","synthetic":true,"types":[]},{"text":"impl Unpin for AtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OFlag","synthetic":true,"types":[]},{"text":"impl Unpin for SealFlag","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlag","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for FcntlArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for FlockArg","synthetic":true,"types":[]},{"text":"impl Unpin for SpliceFFlags","synthetic":true,"types":[]},{"text":"impl Unpin for FallocateFlags","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceAddress","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceAddressIterator","synthetic":true,"types":[]},{"text":"impl Unpin for ModuleInitFlags","synthetic":true,"types":[]},{"text":"impl Unpin for DeleteModuleFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MntFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MQ_OFlag","synthetic":true,"types":[]},{"text":"impl Unpin for FdFlag","synthetic":true,"types":[]},{"text":"impl Unpin for MqAttr","synthetic":true,"types":[]},{"text":"impl Unpin for InterfaceFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PollFd","synthetic":true,"types":[]},{"text":"impl Unpin for PollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OpenptyResult","synthetic":true,"types":[]},{"text":"impl Unpin for ForkptyResult","synthetic":true,"types":[]},{"text":"impl Unpin for PtyMaster","synthetic":true,"types":[]},{"text":"impl Unpin for CloneFlags","synthetic":true,"types":[]},{"text":"impl Unpin for CpuSet","synthetic":true,"types":[]},{"text":"impl Unpin for AioFsyncMode","synthetic":true,"types":[]},{"text":"impl Unpin for LioOpcode","synthetic":true,"types":[]},{"text":"impl Unpin for LioMode","synthetic":true,"types":[]},{"text":"impl Unpin for AioCancelStat","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for AioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for LioCb&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for EpollFlags","synthetic":true,"types":[]},{"text":"impl Unpin for EpollOp","synthetic":true,"types":[]},{"text":"impl Unpin for EpollCreateFlags","synthetic":true,"types":[]},{"text":"impl Unpin for EpollEvent","synthetic":true,"types":[]},{"text":"impl Unpin for EfdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MemFdCreateFlag","synthetic":true,"types":[]},{"text":"impl Unpin for ProtFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MapFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MmapAdvise","synthetic":true,"types":[]},{"text":"impl Unpin for MsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for MlockAllFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Request","synthetic":true,"types":[]},{"text":"impl Unpin for Event","synthetic":true,"types":[]},{"text":"impl Unpin for Options","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaType","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaFmt","synthetic":true,"types":[]},{"text":"impl Unpin for QuotaValidFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Dqblk","synthetic":true,"types":[]},{"text":"impl Unpin for RebootMode","synthetic":true,"types":[]},{"text":"impl Unpin for FdSet","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Fds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SigEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Signal","synthetic":true,"types":[]},{"text":"impl Unpin for SignalIterator","synthetic":true,"types":[]},{"text":"impl Unpin for SaFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SigmaskHow","synthetic":true,"types":[]},{"text":"impl Unpin for SigSet","synthetic":true,"types":[]},{"text":"impl Unpin for SigHandler","synthetic":true,"types":[]},{"text":"impl Unpin for SigAction","synthetic":true,"types":[]},{"text":"impl Unpin for SigevNotify","synthetic":true,"types":[]},{"text":"impl Unpin for SfdFlags","synthetic":true,"types":[]},{"text":"impl Unpin for SignalFd","synthetic":true,"types":[]},{"text":"impl Unpin for NetlinkAddr","synthetic":true,"types":[]},{"text":"impl Unpin for AlgAddr","synthetic":true,"types":[]},{"text":"impl Unpin for LinkAddr","synthetic":true,"types":[]},{"text":"impl Unpin for VsockAddr","synthetic":true,"types":[]},{"text":"impl Unpin for AddressFamily","synthetic":true,"types":[]},{"text":"impl Unpin for InetAddr","synthetic":true,"types":[]},{"text":"impl Unpin for IpAddr","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Unpin for UnixAddr","synthetic":true,"types":[]},{"text":"impl Unpin for SockAddr","synthetic":true,"types":[]},{"text":"impl Unpin for ReuseAddr","synthetic":true,"types":[]},{"text":"impl Unpin for ReusePort","synthetic":true,"types":[]},{"text":"impl Unpin for TcpNoDelay","synthetic":true,"types":[]},{"text":"impl Unpin for Linger","synthetic":true,"types":[]},{"text":"impl Unpin for IpAddMembership","synthetic":true,"types":[]},{"text":"impl Unpin for IpDropMembership","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6AddMembership","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6DropMembership","synthetic":true,"types":[]},{"text":"impl Unpin for IpMulticastTtl","synthetic":true,"types":[]},{"text":"impl Unpin for IpMulticastLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ReceiveTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for SendTimeout","synthetic":true,"types":[]},{"text":"impl Unpin for Broadcast","synthetic":true,"types":[]},{"text":"impl Unpin for OobInline","synthetic":true,"types":[]},{"text":"impl Unpin for SocketError","synthetic":true,"types":[]},{"text":"impl Unpin for KeepAlive","synthetic":true,"types":[]},{"text":"impl Unpin for PeerCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for TcpKeepIdle","synthetic":true,"types":[]},{"text":"impl Unpin for RcvBuf","synthetic":true,"types":[]},{"text":"impl Unpin for SndBuf","synthetic":true,"types":[]},{"text":"impl Unpin for RcvBufForce","synthetic":true,"types":[]},{"text":"impl Unpin for SndBufForce","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for AcceptConn","synthetic":true,"types":[]},{"text":"impl Unpin for BindToDevice","synthetic":true,"types":[]},{"text":"impl Unpin for OriginalDst","synthetic":true,"types":[]},{"text":"impl Unpin for ReceiveTimestamp","synthetic":true,"types":[]},{"text":"impl Unpin for IpTransparent","synthetic":true,"types":[]},{"text":"impl Unpin for Mark","synthetic":true,"types":[]},{"text":"impl Unpin for PassCred","synthetic":true,"types":[]},{"text":"impl Unpin for TcpCongestion","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv4PacketInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6RecvPacketInfo","synthetic":true,"types":[]},{"text":"impl Unpin for UdpGsoSegment","synthetic":true,"types":[]},{"text":"impl Unpin for UdpGroSegment","synthetic":true,"types":[]},{"text":"impl Unpin for AlgSetAeadAuthSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for AlgSetKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SockType","synthetic":true,"types":[]},{"text":"impl Unpin for SockProtocol","synthetic":true,"types":[]},{"text":"impl Unpin for SockFlag","synthetic":true,"types":[]},{"text":"impl Unpin for MsgFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UnixCredentials","synthetic":true,"types":[]},{"text":"impl Unpin for IpMembershipRequest","synthetic":true,"types":[]},{"text":"impl Unpin for Ipv6MembershipRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for RecvMsg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for CmsgIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for ControlMessageOwned","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ControlMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, I, C&gt; Unpin for SendMmsgData&lt;'a, I, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Unpin for RecvMmsgData&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SockLevel","synthetic":true,"types":[]},{"text":"impl Unpin for Shutdown","synthetic":true,"types":[]},{"text":"impl Unpin for SFlag","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for FchmodatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UtimensatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Statfs","synthetic":true,"types":[]},{"text":"impl Unpin for FsType","synthetic":true,"types":[]},{"text":"impl Unpin for FsFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Statvfs","synthetic":true,"types":[]},{"text":"impl Unpin for SysInfo","synthetic":true,"types":[]},{"text":"impl Unpin for Termios","synthetic":true,"types":[]},{"text":"impl Unpin for BaudRate","synthetic":true,"types":[]},{"text":"impl Unpin for SetArg","synthetic":true,"types":[]},{"text":"impl Unpin for FlushArg","synthetic":true,"types":[]},{"text":"impl Unpin for FlowArg","synthetic":true,"types":[]},{"text":"impl Unpin for SpecialCharacterIndices","synthetic":true,"types":[]},{"text":"impl Unpin for InputFlags","synthetic":true,"types":[]},{"text":"impl Unpin for OutputFlags","synthetic":true,"types":[]},{"text":"impl Unpin for ControlFlags","synthetic":true,"types":[]},{"text":"impl Unpin for LocalFlags","synthetic":true,"types":[]},{"text":"impl Unpin for TimeSpec","synthetic":true,"types":[]},{"text":"impl Unpin for TimeVal","synthetic":true,"types":[]},{"text":"impl Unpin for RemoteIoVec","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IoVec&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UtsName","synthetic":true,"types":[]},{"text":"impl Unpin for WaitPidFlag","synthetic":true,"types":[]},{"text":"impl Unpin for WaitStatus","synthetic":true,"types":[]},{"text":"impl Unpin for AddWatchFlags","synthetic":true,"types":[]},{"text":"impl Unpin for InitFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Inotify","synthetic":true,"types":[]},{"text":"impl Unpin for WatchDescriptor","synthetic":true,"types":[]},{"text":"impl Unpin for InotifyEvent","synthetic":true,"types":[]},{"text":"impl Unpin for TimerFd","synthetic":true,"types":[]},{"text":"impl Unpin for ClockId","synthetic":true,"types":[]},{"text":"impl Unpin for TimerFlags","synthetic":true,"types":[]},{"text":"impl Unpin for TimerSetTimeFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Expiration","synthetic":true,"types":[]},{"text":"impl Unpin for UContext","synthetic":true,"types":[]},{"text":"impl Unpin for Uid","synthetic":true,"types":[]},{"text":"impl Unpin for Gid","synthetic":true,"types":[]},{"text":"impl Unpin for Pid","synthetic":true,"types":[]},{"text":"impl Unpin for ForkResult","synthetic":true,"types":[]},{"text":"impl Unpin for FchownatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for Whence","synthetic":true,"types":[]},{"text":"impl Unpin for LinkatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for UnlinkatFlags","synthetic":true,"types":[]},{"text":"impl Unpin for PathconfVar","synthetic":true,"types":[]},{"text":"impl Unpin for SysconfVar","synthetic":true,"types":[]},{"text":"impl Unpin for AccessFlags","synthetic":true,"types":[]},{"text":"impl Unpin for User","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Unpin for ExtendedGcd&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IterBinomial&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Unpin for FloatErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for ParseFloatError","synthetic":true,"types":[]}];
implementors["openssl"] = [{"text":"impl Unpin for KeyError","synthetic":true,"types":[]},{"text":"impl Unpin for AesKey","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1GeneralizedTime","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1GeneralizedTimeRef","synthetic":true,"types":[]},{"text":"impl Unpin for TimeDiff","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Time","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1TimeRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1String","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1StringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Integer","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1IntegerRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1BitString","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1BitStringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Object","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1ObjectRef","synthetic":true,"types":[]},{"text":"impl Unpin for MsbOption","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumContext","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for BigNum","synthetic":true,"types":[]},{"text":"impl Unpin for BigNumRef","synthetic":true,"types":[]},{"text":"impl Unpin for CMSOptions","synthetic":true,"types":[]},{"text":"impl Unpin for CmsContentInfo","synthetic":true,"types":[]},{"text":"impl Unpin for CmsContentInfoRef","synthetic":true,"types":[]},{"text":"impl Unpin for ConfMethod","synthetic":true,"types":[]},{"text":"impl Unpin for Conf","synthetic":true,"types":[]},{"text":"impl Unpin for ConfRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Deriver&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Dh&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DhRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Dsa&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for DsaRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for PointConversionForm","synthetic":true,"types":[]},{"text":"impl Unpin for Asn1Flag","synthetic":true,"types":[]},{"text":"impl Unpin for EcGroup","synthetic":true,"types":[]},{"text":"impl Unpin for EcGroupRef","synthetic":true,"types":[]},{"text":"impl Unpin for EcPoint","synthetic":true,"types":[]},{"text":"impl Unpin for EcPointRef","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EcKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for EcKeyRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaSig","synthetic":true,"types":[]},{"text":"impl Unpin for EcdsaSigRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Encrypter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Decrypter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Seal","synthetic":true,"types":[]},{"text":"impl Unpin for Open","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorStack","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Unpin for Index&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for MessageDigest","synthetic":true,"types":[]},{"text":"impl Unpin for Hasher","synthetic":true,"types":[]},{"text":"impl Unpin for DigestBytes","synthetic":true,"types":[]},{"text":"impl Unpin for SignatureAlgorithms","synthetic":true,"types":[]},{"text":"impl Unpin for Nid","synthetic":true,"types":[]},{"text":"impl Unpin for OcspFlag","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponseStatus","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertStatus","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRevokedStatus","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OcspStatus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OcspBasicResponse","synthetic":true,"types":[]},{"text":"impl Unpin for OcspBasicResponseRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertId","synthetic":true,"types":[]},{"text":"impl Unpin for OcspCertIdRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponse","synthetic":true,"types":[]},{"text":"impl Unpin for OcspResponseRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRequest","synthetic":true,"types":[]},{"text":"impl Unpin for OcspRequestRef","synthetic":true,"types":[]},{"text":"impl Unpin for OcspOneReq","synthetic":true,"types":[]},{"text":"impl Unpin for OcspOneReqRef","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12Ref","synthetic":true,"types":[]},{"text":"impl Unpin for ParsedPkcs12","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs12Builder","synthetic":true,"types":[]},{"text":"impl Unpin for KeyIvPair","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Pkcs7Flags","synthetic":true,"types":[]},{"text":"impl Unpin for Params","synthetic":true,"types":[]},{"text":"impl Unpin for Public","synthetic":true,"types":[]},{"text":"impl Unpin for Private","synthetic":true,"types":[]},{"text":"impl Unpin for Id","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PKey&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for PKeyRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Padding","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Rsa&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for RsaRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for RsaPrivateKeyBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Sha1","synthetic":true,"types":[]},{"text":"impl Unpin for Sha224","synthetic":true,"types":[]},{"text":"impl Unpin for Sha256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha384","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512","synthetic":true,"types":[]},{"text":"impl Unpin for RsaPssSaltlen","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Signer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Verifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProtectionProfile","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProtectionProfileRef","synthetic":true,"types":[]},{"text":"impl Unpin for SrtpProfileId","synthetic":true,"types":[]},{"text":"impl Unpin for SslConnector","synthetic":true,"types":[]},{"text":"impl Unpin for SslConnectorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ConnectConfiguration","synthetic":true,"types":[]},{"text":"impl Unpin for SslAcceptor","synthetic":true,"types":[]},{"text":"impl Unpin for SslAcceptorBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for ErrorCode","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for SslOptions","synthetic":true,"types":[]},{"text":"impl Unpin for SslMode","synthetic":true,"types":[]},{"text":"impl Unpin for SslMethod","synthetic":true,"types":[]},{"text":"impl Unpin for SslVerifyMode","synthetic":true,"types":[]},{"text":"impl Unpin for SslSessionCacheMode","synthetic":true,"types":[]},{"text":"impl Unpin for ExtensionContext","synthetic":true,"types":[]},{"text":"impl Unpin for SslFiletype","synthetic":true,"types":[]},{"text":"impl Unpin for StatusType","synthetic":true,"types":[]},{"text":"impl Unpin for NameType","synthetic":true,"types":[]},{"text":"impl Unpin for SniError","synthetic":true,"types":[]},{"text":"impl Unpin for SslAlert","synthetic":true,"types":[]},{"text":"impl Unpin for AlpnError","synthetic":true,"types":[]},{"text":"impl Unpin for ClientHelloResponse","synthetic":true,"types":[]},{"text":"impl Unpin for SslVersion","synthetic":true,"types":[]},{"text":"impl Unpin for SslContextBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for SslContext","synthetic":true,"types":[]},{"text":"impl Unpin for SslContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for CipherBits","synthetic":true,"types":[]},{"text":"impl Unpin for SslCipher","synthetic":true,"types":[]},{"text":"impl Unpin for SslCipherRef","synthetic":true,"types":[]},{"text":"impl Unpin for SslSession","synthetic":true,"types":[]},{"text":"impl Unpin for SslSessionRef","synthetic":true,"types":[]},{"text":"impl Unpin for Ssl","synthetic":true,"types":[]},{"text":"impl Unpin for SslRef","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for MidHandshakeSslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Unpin for SslStreamBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownResult","synthetic":true,"types":[]},{"text":"impl Unpin for ShutdownState","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Stack&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for StackRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for OpensslString","synthetic":true,"types":[]},{"text":"impl Unpin for OpensslStringRef","synthetic":true,"types":[]},{"text":"impl Unpin for Mode","synthetic":true,"types":[]},{"text":"impl Unpin for Cipher","synthetic":true,"types":[]},{"text":"impl Unpin for Crypter","synthetic":true,"types":[]},{"text":"impl Unpin for X509CheckFlags","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyFlags","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyParam","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyParamRef","synthetic":true,"types":[]},{"text":"impl Unpin for BasicConstraints","synthetic":true,"types":[]},{"text":"impl Unpin for KeyUsage","synthetic":true,"types":[]},{"text":"impl Unpin for ExtendedKeyUsage","synthetic":true,"types":[]},{"text":"impl Unpin for SubjectKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for AuthorityKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for SubjectAlternativeName","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreBuilderRef","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for X509Lookup&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for X509LookupRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for HashDir","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for X509LookupMethod&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for X509LookupMethodRef&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for X509Store","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreContext","synthetic":true,"types":[]},{"text":"impl Unpin for X509StoreContextRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Builder","synthetic":true,"types":[]},{"text":"impl Unpin for X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509Ref","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for X509v3Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for X509Extension","synthetic":true,"types":[]},{"text":"impl Unpin for X509ExtensionRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509Name","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameRef","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for X509NameEntries&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameEntry","synthetic":true,"types":[]},{"text":"impl Unpin for X509NameEntryRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509ReqBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for X509Req","synthetic":true,"types":[]},{"text":"impl Unpin for X509ReqRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509VerifyResult","synthetic":true,"types":[]},{"text":"impl Unpin for GeneralName","synthetic":true,"types":[]},{"text":"impl Unpin for GeneralNameRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Algorithm","synthetic":true,"types":[]},{"text":"impl Unpin for X509AlgorithmRef","synthetic":true,"types":[]},{"text":"impl Unpin for X509Object","synthetic":true,"types":[]},{"text":"impl Unpin for X509ObjectRef","synthetic":true,"types":[]}];
implementors["openssl_probe"] = [{"text":"impl Unpin for ProbeResult","synthetic":true,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Unpin for AES_KEY","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_ENCODING","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for BIO_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for CMS_ContentInfo","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_void","synthetic":true,"types":[]},{"text":"impl Unpin for point_conversion_form_t","synthetic":true,"types":[]},{"text":"impl Unpin for EC_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EC_GROUP","synthetic":true,"types":[]},{"text":"impl Unpin for EC_POINT","synthetic":true,"types":[]},{"text":"impl Unpin for ECDSA_SIG","synthetic":true,"types":[]},{"text":"impl Unpin for ERR_STRING_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_CERTID","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_ONEREQ","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_REQUEST","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_BASICRESP","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_INTEGER","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_GENERALIZEDTIME","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_BIT_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_TIME","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_TYPE","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for ASN1_OCTET_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for bio_st","synthetic":true,"types":[]},{"text":"impl Unpin for BIO","synthetic":true,"types":[]},{"text":"impl Unpin for BIGNUM","synthetic":true,"types":[]},{"text":"impl Unpin for BN_BLINDING","synthetic":true,"types":[]},{"text":"impl Unpin for BN_MONT_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for BN_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for BN_GENCB","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_CIPHER_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_MD","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_MD_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS8_PRIV_KEY_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY_ASN1_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EVP_PKEY_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for HMAC_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for DH","synthetic":true,"types":[]},{"text":"impl Unpin for DH_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for DSA","synthetic":true,"types":[]},{"text":"impl Unpin for DSA_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for RSA","synthetic":true,"types":[]},{"text":"impl Unpin for RSA_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for EC_KEY","synthetic":true,"types":[]},{"text":"impl Unpin for X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509_ALGOR","synthetic":true,"types":[]},{"text":"impl Unpin for X509_LOOKUP_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for X509_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for X509_STORE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_STORE_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for X509_VERIFY_PARAM","synthetic":true,"types":[]},{"text":"impl Unpin for X509V3_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for CONF","synthetic":true,"types":[]},{"text":"impl Unpin for OPENSSL_INIT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Unpin for ENGINE","synthetic":true,"types":[]},{"text":"impl Unpin for SSL","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for COMP_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for CRYPTO_EX_DATA","synthetic":true,"types":[]},{"text":"impl Unpin for OCSP_RESPONSE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS12","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_SIGNED","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_SIGN_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_DIGEST","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7_ENCRYPT","synthetic":true,"types":[]},{"text":"impl Unpin for PKCS7","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_OPENSSL_STRING","synthetic":true,"types":[]},{"text":"impl Unpin for SHA_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA256_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SHA512_CTX","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for SSL_SESSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Unpin for SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl Unpin for OPENSSL_STACK","synthetic":true,"types":[]},{"text":"impl Unpin for X509_VAL","synthetic":true,"types":[]},{"text":"impl Unpin for X509_NAME_ENTRY","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_ATTRIBUTE","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REQ_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CRL","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_CRL","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CRL_INFO","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REVOKED","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_REVOKED","synthetic":true,"types":[]},{"text":"impl Unpin for X509_REQ","synthetic":true,"types":[]},{"text":"impl Unpin for X509_CINF","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509","synthetic":true,"types":[]},{"text":"impl Unpin for X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_OBJECT","synthetic":true,"types":[]},{"text":"impl Unpin for X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Unpin for CONF_METHOD","synthetic":true,"types":[]},{"text":"impl Unpin for GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for stack_st_GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl Unpin for AUTHORITY_KEYID","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Unpin for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl Unpin for Condvar","synthetic":true,"types":[]},{"text":"impl Unpin for OnceState","synthetic":true,"types":[]},{"text":"impl Unpin for Once","synthetic":true,"types":[]},{"text":"impl Unpin for RawFairMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawMutex","synthetic":true,"types":[]},{"text":"impl Unpin for RawRwLock","synthetic":true,"types":[]},{"text":"impl Unpin for RawThreadId","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Unpin for ParkResult","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkResult","synthetic":true,"types":[]},{"text":"impl Unpin for RequeueOp","synthetic":true,"types":[]},{"text":"impl Unpin for FilterOp","synthetic":true,"types":[]},{"text":"impl Unpin for UnparkToken","synthetic":true,"types":[]},{"text":"impl Unpin for ParkToken","synthetic":true,"types":[]},{"text":"impl Unpin for SpinWait","synthetic":true,"types":[]}];
implementors["pear"] = [{"text":"impl&lt;'a&gt; Unpin for Position&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Text&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Unpin for StringFile&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, I, S&gt; Unpin for Expected&lt;T, I, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for ParseErr&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Input&gt;::Context: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Input&gt;::InSlice: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Input&gt;::Slice: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I as Input&gt;::Token: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Unpin for SIMPLE_ENCODE_SET","synthetic":true,"types":[]},{"text":"impl Unpin for QUERY_ENCODE_SET","synthetic":true,"types":[]},{"text":"impl Unpin for DEFAULT_ENCODE_SET","synthetic":true,"types":[]},{"text":"impl Unpin for PATH_SEGMENT_ENCODE_SET","synthetic":true,"types":[]},{"text":"impl Unpin for USERINFO_ENCODE_SET","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for PercentEncode&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PercentDecode&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["phf"] = [{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Entries&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Unpin for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Set&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]}];
implementors["phf_shared"] = [{"text":"impl Unpin for Hashes","synthetic":true,"types":[]}];
implementors["polyval"] = [{"text":"impl Unpin for Polyval","synthetic":true,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Unpin for YesS3","synthetic":true,"types":[]},{"text":"impl Unpin for NoS3","synthetic":true,"types":[]},{"text":"impl Unpin for YesS4","synthetic":true,"types":[]},{"text":"impl Unpin for NoS4","synthetic":true,"types":[]},{"text":"impl Unpin for YesA1","synthetic":true,"types":[]},{"text":"impl Unpin for NoA1","synthetic":true,"types":[]},{"text":"impl Unpin for YesA2","synthetic":true,"types":[]},{"text":"impl Unpin for NoA2","synthetic":true,"types":[]},{"text":"impl Unpin for YesNI","synthetic":true,"types":[]},{"text":"impl Unpin for NoNI","synthetic":true,"types":[]},{"text":"impl&lt;S3, S4, NI&gt; Unpin for SseMachine&lt;S3, S4, NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S3: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S4: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;NI&gt; Unpin for Avx2Machine&lt;NI&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;NI: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for vec128_storage","synthetic":true,"types":[]},{"text":"impl Unpin for vec256_storage","synthetic":true,"types":[]},{"text":"impl Unpin for vec512_storage","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl Unpin for TokenStream","synthetic":true,"types":[]},{"text":"impl Unpin for LexError","synthetic":true,"types":[]},{"text":"impl Unpin for Span","synthetic":true,"types":[]},{"text":"impl Unpin for TokenTree","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Delimiter","synthetic":true,"types":[]},{"text":"impl Unpin for Punct","synthetic":true,"types":[]},{"text":"impl Unpin for Spacing","synthetic":true,"types":[]},{"text":"impl Unpin for Ident","synthetic":true,"types":[]},{"text":"impl Unpin for Literal","synthetic":true,"types":[]}];
implementors["r2d2"] = [{"text":"impl&lt;M&gt; Unpin for Builder&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NopEventHandler","synthetic":true,"types":[]},{"text":"impl Unpin for AcquireEvent","synthetic":true,"types":[]},{"text":"impl Unpin for ReleaseEvent","synthetic":true,"types":[]},{"text":"impl Unpin for CheckoutEvent","synthetic":true,"types":[]},{"text":"impl Unpin for TimeoutEvent","synthetic":true,"types":[]},{"text":"impl Unpin for CheckinEvent","synthetic":true,"types":[]},{"text":"impl Unpin for Extensions","synthetic":true,"types":[]},{"text":"impl Unpin for NopErrorHandler","synthetic":true,"types":[]},{"text":"impl Unpin for LoggingErrorHandler","synthetic":true,"types":[]},{"text":"impl Unpin for NopConnectionCustomizer","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Unpin for Pool&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for State","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Unpin for PooledConnection&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as ManageConnection&gt;::Connection: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand"] = [{"text":"impl Unpin for Bernoulli","synthetic":true,"types":[]},{"text":"impl Unpin for BernoulliError","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for UniformInt&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UniformChar","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for UniformFloat&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for UniformDuration","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Unpin for WeightedIndex&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;X&gt; Unpin for WeightedIndex&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;X as SampleUniform&gt;::Sampler: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for WeightedError","synthetic":true,"types":[]},{"text":"impl Unpin for OpenClosed01","synthetic":true,"types":[]},{"text":"impl Unpin for Open01","synthetic":true,"types":[]},{"text":"impl Unpin for Alphanumeric","synthetic":true,"types":[]},{"text":"impl&lt;D, R, T&gt; Unpin for DistIter&lt;D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Standard","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for ReadRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ReadError","synthetic":true,"types":[]},{"text":"impl&lt;R, Rsdr&gt; Unpin for ReseedingRng&lt;R, Rsdr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rsdr: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for StepRng","synthetic":true,"types":[]},{"text":"impl Unpin for StdRng","synthetic":true,"types":[]},{"text":"impl Unpin for ThreadRng","synthetic":true,"types":[]},{"text":"impl Unpin for IndexVec","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IndexVecIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IndexVecIntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a, S:&nbsp;?Sized, T&gt; Unpin for SliceChooseIter&lt;'a, S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["rand_chacha"] = [{"text":"impl Unpin for ChaCha20Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha20Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha12Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha12Rng","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha8Core","synthetic":true,"types":[]},{"text":"impl Unpin for ChaCha8Rng","synthetic":true,"types":[]}];
implementors["rand_core"] = [{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for BlockRng&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R:&nbsp;?Sized&gt; Unpin for BlockRng64&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;R as BlockRngCore&gt;::Results: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for OsRng","synthetic":true,"types":[]}];
implementors["rand_hc"] = [{"text":"impl Unpin for Hc128Rng","synthetic":true,"types":[]},{"text":"impl Unpin for Hc128Core","synthetic":true,"types":[]}];
implementors["rand_isaac"] = [{"text":"impl Unpin for IsaacRng","synthetic":true,"types":[]},{"text":"impl Unpin for IsaacCore","synthetic":true,"types":[]},{"text":"impl Unpin for Isaac64Rng","synthetic":true,"types":[]},{"text":"impl Unpin for Isaac64Core","synthetic":true,"types":[]}];
implementors["rand_jitter"] = [{"text":"impl Unpin for TimerError","synthetic":true,"types":[]},{"text":"impl Unpin for JitterRng","synthetic":true,"types":[]}];
implementors["rand_os"] = [{"text":"impl Unpin for OsRng","synthetic":true,"types":[]}];
implementors["rand_pcg"] = [{"text":"impl Unpin for Lcg64Xsh32","synthetic":true,"types":[]},{"text":"impl Unpin for Lcg128Xsl64","synthetic":true,"types":[]},{"text":"impl Unpin for Mcg128Xsl64","synthetic":true,"types":[]}];
implementors["rand_xorshift"] = [{"text":"impl Unpin for XorShiftRng","synthetic":true,"types":[]}];
implementors["rocket"] = [{"text":"impl Unpin for LoggingLevel","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Unpin for LocalRequest&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Unpin for LocalResponse&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Client","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for Request&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for FormItems&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for FormItem&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for LenientForm&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'f&gt; Unpin for FormParseError&lt;'f&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'f, E&gt; Unpin for FormDataError&lt;'f, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Form&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r, T&gt; Unpin for State&lt;'r, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'q&gt; Unpin for Query&lt;'q&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Redirect","synthetic":true,"types":[]},{"text":"impl Unpin for NamedFile","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Stream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Body&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for ResponseBuilder&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'r&gt; Unpin for Response&lt;'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for Debug&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Flash&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Content&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Json&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Xml&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for MsgPack&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Html&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Plain&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Css&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for JavaScript&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Created&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Accepted&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for NoContent","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for BadRequest&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Unauthorized&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Forbidden&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for NotFound&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Conflict&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Custom&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S, E, F&gt; Unpin for Outcome&lt;S, E, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigError","synthetic":true,"types":[]},{"text":"impl Unpin for Environment","synthetic":true,"types":[]},{"text":"impl Unpin for Config","synthetic":true,"types":[]},{"text":"impl Unpin for ConfigBuilder","synthetic":true,"types":[]},{"text":"impl Unpin for Limits","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for DataStream","synthetic":true,"types":[]},{"text":"impl&lt;T, B&gt; Unpin for Transform&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for AdHoc","synthetic":true,"types":[]},{"text":"impl Unpin for Info","synthetic":true,"types":[]},{"text":"impl Unpin for Kind","synthetic":true,"types":[]},{"text":"impl Unpin for LaunchErrorKind","synthetic":true,"types":[]},{"text":"impl Unpin for LaunchError","synthetic":true,"types":[]},{"text":"impl Unpin for RouteUriError","synthetic":true,"types":[]},{"text":"impl Unpin for Route","synthetic":true,"types":[]},{"text":"impl Unpin for Rocket","synthetic":true,"types":[]},{"text":"impl Unpin for Catcher","synthetic":true,"types":[]}];
implementors["rocket_http"] = [{"text":"impl&lt;'a&gt; Unpin for Uri&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i, P&gt; Unpin for Formatter&lt;'i, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Origin&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Authority&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Absolute&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Segments&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for SegmentError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Error&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for Query","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cookies&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Method","synthetic":true,"types":[]},{"text":"impl Unpin for MediaType","synthetic":true,"types":[]},{"text":"impl Unpin for ContentType","synthetic":true,"types":[]},{"text":"impl Unpin for StatusClass","synthetic":true,"types":[]},{"text":"impl Unpin for Status","synthetic":true,"types":[]},{"text":"impl&lt;'h&gt; Unpin for Header&lt;'h&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'h&gt; Unpin for HeaderMap&lt;'h&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for QMediaType","synthetic":true,"types":[]},{"text":"impl Unpin for Accept","synthetic":true,"types":[]},{"text":"impl Unpin for RawStr","synthetic":true,"types":[]},{"text":"impl Unpin for UncasedStr","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Unpin for Uncased&lt;'s&gt;","synthetic":true,"types":[]}];
implementors["rust_embed"] = [{"text":"impl Unpin for Filenames","synthetic":true,"types":[]}];
implementors["rust_embed_utils"] = [{"text":"impl Unpin for FileEntry","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Unpin for Buffer","synthetic":true,"types":[]}];
implementors["same_file"] = [{"text":"impl Unpin for Handle","synthetic":true,"types":[]}];
implementors["scheduled_thread_pool"] = [{"text":"impl Unpin for JobHandle","synthetic":true,"types":[]},{"text":"impl Unpin for ScheduledThreadPool","synthetic":true,"types":[]}];
implementors["scopeguard"] = [{"text":"impl Unpin for Always","synthetic":true,"types":[]},{"text":"impl&lt;T, F, S&gt; Unpin for ScopeGuard&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Unpin for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Unpin for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Unpin for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Unpin for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Unpin for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;'a&gt; Unpin for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Unpin for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Unpin for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Category","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Unpin for Map&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Unpin for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for CharEscape","synthetic":true,"types":[]},{"text":"impl Unpin for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Serializer","synthetic":true,"types":[]},{"text":"impl Unpin for Number","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]}];
implementors["sha2"] = [{"text":"impl Unpin for Sha256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha224","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512","synthetic":true,"types":[]},{"text":"impl Unpin for Sha384","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512Trunc256","synthetic":true,"types":[]},{"text":"impl Unpin for Sha512Trunc224","synthetic":true,"types":[]}];
implementors["siphasher"] = [{"text":"impl Unpin for SipHasher13","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher24","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher","synthetic":true,"types":[]},{"text":"impl Unpin for Hash128","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher13","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher24","synthetic":true,"types":[]},{"text":"impl Unpin for SipHasher","synthetic":true,"types":[]}];
implementors["smallvec"] = [{"text":"impl Unpin for CollectionAllocErr","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Drain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["state"] = [{"text":"impl Unpin for Container","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Storage&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["strum"] = [{"text":"impl Unpin for ParseError","synthetic":true,"types":[]}];
implementors["subtle"] = [{"text":"impl Unpin for Choice","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl Unpin for Underscore","synthetic":true,"types":[]},{"text":"impl Unpin for Abstract","synthetic":true,"types":[]},{"text":"impl Unpin for As","synthetic":true,"types":[]},{"text":"impl Unpin for Async","synthetic":true,"types":[]},{"text":"impl Unpin for Auto","synthetic":true,"types":[]},{"text":"impl Unpin for Become","synthetic":true,"types":[]},{"text":"impl Unpin for Box","synthetic":true,"types":[]},{"text":"impl Unpin for Break","synthetic":true,"types":[]},{"text":"impl Unpin for Const","synthetic":true,"types":[]},{"text":"impl Unpin for Continue","synthetic":true,"types":[]},{"text":"impl Unpin for Crate","synthetic":true,"types":[]},{"text":"impl Unpin for Default","synthetic":true,"types":[]},{"text":"impl Unpin for Do","synthetic":true,"types":[]},{"text":"impl Unpin for Dyn","synthetic":true,"types":[]},{"text":"impl Unpin for Else","synthetic":true,"types":[]},{"text":"impl Unpin for Enum","synthetic":true,"types":[]},{"text":"impl Unpin for Existential","synthetic":true,"types":[]},{"text":"impl Unpin for Extern","synthetic":true,"types":[]},{"text":"impl Unpin for Final","synthetic":true,"types":[]},{"text":"impl Unpin for Fn","synthetic":true,"types":[]},{"text":"impl Unpin for For","synthetic":true,"types":[]},{"text":"impl Unpin for If","synthetic":true,"types":[]},{"text":"impl Unpin for Impl","synthetic":true,"types":[]},{"text":"impl Unpin for In","synthetic":true,"types":[]},{"text":"impl Unpin for Let","synthetic":true,"types":[]},{"text":"impl Unpin for Loop","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for Match","synthetic":true,"types":[]},{"text":"impl Unpin for Mod","synthetic":true,"types":[]},{"text":"impl Unpin for Move","synthetic":true,"types":[]},{"text":"impl Unpin for Mut","synthetic":true,"types":[]},{"text":"impl Unpin for Override","synthetic":true,"types":[]},{"text":"impl Unpin for Priv","synthetic":true,"types":[]},{"text":"impl Unpin for Pub","synthetic":true,"types":[]},{"text":"impl Unpin for Ref","synthetic":true,"types":[]},{"text":"impl Unpin for Return","synthetic":true,"types":[]},{"text":"impl Unpin for SelfType","synthetic":true,"types":[]},{"text":"impl Unpin for SelfValue","synthetic":true,"types":[]},{"text":"impl Unpin for Static","synthetic":true,"types":[]},{"text":"impl Unpin for Struct","synthetic":true,"types":[]},{"text":"impl Unpin for Super","synthetic":true,"types":[]},{"text":"impl Unpin for Trait","synthetic":true,"types":[]},{"text":"impl Unpin for Try","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for Typeof","synthetic":true,"types":[]},{"text":"impl Unpin for Union","synthetic":true,"types":[]},{"text":"impl Unpin for Unsafe","synthetic":true,"types":[]},{"text":"impl Unpin for Unsized","synthetic":true,"types":[]},{"text":"impl Unpin for Use","synthetic":true,"types":[]},{"text":"impl Unpin for Virtual","synthetic":true,"types":[]},{"text":"impl Unpin for Where","synthetic":true,"types":[]},{"text":"impl Unpin for While","synthetic":true,"types":[]},{"text":"impl Unpin for Yield","synthetic":true,"types":[]},{"text":"impl Unpin for Add","synthetic":true,"types":[]},{"text":"impl Unpin for AddEq","synthetic":true,"types":[]},{"text":"impl Unpin for And","synthetic":true,"types":[]},{"text":"impl Unpin for AndAnd","synthetic":true,"types":[]},{"text":"impl Unpin for AndEq","synthetic":true,"types":[]},{"text":"impl Unpin for At","synthetic":true,"types":[]},{"text":"impl Unpin for Bang","synthetic":true,"types":[]},{"text":"impl Unpin for Caret","synthetic":true,"types":[]},{"text":"impl Unpin for CaretEq","synthetic":true,"types":[]},{"text":"impl Unpin for Colon","synthetic":true,"types":[]},{"text":"impl Unpin for Colon2","synthetic":true,"types":[]},{"text":"impl Unpin for Comma","synthetic":true,"types":[]},{"text":"impl Unpin for Div","synthetic":true,"types":[]},{"text":"impl Unpin for DivEq","synthetic":true,"types":[]},{"text":"impl Unpin for Dollar","synthetic":true,"types":[]},{"text":"impl Unpin for Dot","synthetic":true,"types":[]},{"text":"impl Unpin for Dot2","synthetic":true,"types":[]},{"text":"impl Unpin for Dot3","synthetic":true,"types":[]},{"text":"impl Unpin for DotDotEq","synthetic":true,"types":[]},{"text":"impl Unpin for Eq","synthetic":true,"types":[]},{"text":"impl Unpin for EqEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ge","synthetic":true,"types":[]},{"text":"impl Unpin for Gt","synthetic":true,"types":[]},{"text":"impl Unpin for Le","synthetic":true,"types":[]},{"text":"impl Unpin for Lt","synthetic":true,"types":[]},{"text":"impl Unpin for MulEq","synthetic":true,"types":[]},{"text":"impl Unpin for Ne","synthetic":true,"types":[]},{"text":"impl Unpin for Or","synthetic":true,"types":[]},{"text":"impl Unpin for OrEq","synthetic":true,"types":[]},{"text":"impl Unpin for OrOr","synthetic":true,"types":[]},{"text":"impl Unpin for Pound","synthetic":true,"types":[]},{"text":"impl Unpin for Question","synthetic":true,"types":[]},{"text":"impl Unpin for RArrow","synthetic":true,"types":[]},{"text":"impl Unpin for LArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Rem","synthetic":true,"types":[]},{"text":"impl Unpin for RemEq","synthetic":true,"types":[]},{"text":"impl Unpin for FatArrow","synthetic":true,"types":[]},{"text":"impl Unpin for Semi","synthetic":true,"types":[]},{"text":"impl Unpin for Shl","synthetic":true,"types":[]},{"text":"impl Unpin for ShlEq","synthetic":true,"types":[]},{"text":"impl Unpin for Shr","synthetic":true,"types":[]},{"text":"impl Unpin for ShrEq","synthetic":true,"types":[]},{"text":"impl Unpin for Star","synthetic":true,"types":[]},{"text":"impl Unpin for Sub","synthetic":true,"types":[]},{"text":"impl Unpin for SubEq","synthetic":true,"types":[]},{"text":"impl Unpin for Tilde","synthetic":true,"types":[]},{"text":"impl Unpin for Brace","synthetic":true,"types":[]},{"text":"impl Unpin for Bracket","synthetic":true,"types":[]},{"text":"impl Unpin for Paren","synthetic":true,"types":[]},{"text":"impl Unpin for Group","synthetic":true,"types":[]},{"text":"impl Unpin for Attribute","synthetic":true,"types":[]},{"text":"impl Unpin for AttrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Meta","synthetic":true,"types":[]},{"text":"impl Unpin for MetaList","synthetic":true,"types":[]},{"text":"impl Unpin for MetaNameValue","synthetic":true,"types":[]},{"text":"impl Unpin for NestedMeta","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for Fields","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsNamed","synthetic":true,"types":[]},{"text":"impl Unpin for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl Unpin for Field","synthetic":true,"types":[]},{"text":"impl Unpin for Visibility","synthetic":true,"types":[]},{"text":"impl Unpin for VisPublic","synthetic":true,"types":[]},{"text":"impl Unpin for VisCrate","synthetic":true,"types":[]},{"text":"impl Unpin for VisRestricted","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBox","synthetic":true,"types":[]},{"text":"impl Unpin for ExprInPlace","synthetic":true,"types":[]},{"text":"impl Unpin for ExprArray","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTuple","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBinary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnary","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLit","synthetic":true,"types":[]},{"text":"impl Unpin for ExprCast","synthetic":true,"types":[]},{"text":"impl Unpin for ExprType","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLet","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIf","synthetic":true,"types":[]},{"text":"impl Unpin for ExprWhile","synthetic":true,"types":[]},{"text":"impl Unpin for ExprForLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprLoop","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMatch","synthetic":true,"types":[]},{"text":"impl Unpin for ExprClosure","synthetic":true,"types":[]},{"text":"impl Unpin for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssign","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl Unpin for ExprField","synthetic":true,"types":[]},{"text":"impl Unpin for ExprIndex","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRange","synthetic":true,"types":[]},{"text":"impl Unpin for ExprPath","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReference","synthetic":true,"types":[]},{"text":"impl Unpin for ExprBreak","synthetic":true,"types":[]},{"text":"impl Unpin for ExprContinue","synthetic":true,"types":[]},{"text":"impl Unpin for ExprReturn","synthetic":true,"types":[]},{"text":"impl Unpin for ExprMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ExprStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ExprRepeat","synthetic":true,"types":[]},{"text":"impl Unpin for ExprParen","synthetic":true,"types":[]},{"text":"impl Unpin for ExprGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTry","synthetic":true,"types":[]},{"text":"impl Unpin for ExprAsync","synthetic":true,"types":[]},{"text":"impl Unpin for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl Unpin for ExprYield","synthetic":true,"types":[]},{"text":"impl Unpin for ExprVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for Member","synthetic":true,"types":[]},{"text":"impl Unpin for Index","synthetic":true,"types":[]},{"text":"impl Unpin for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl Unpin for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl Unpin for FieldValue","synthetic":true,"types":[]},{"text":"impl Unpin for Label","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for Stmt","synthetic":true,"types":[]},{"text":"impl Unpin for Local","synthetic":true,"types":[]},{"text":"impl Unpin for Pat","synthetic":true,"types":[]},{"text":"impl Unpin for PatWild","synthetic":true,"types":[]},{"text":"impl Unpin for PatIdent","synthetic":true,"types":[]},{"text":"impl Unpin for PatStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl Unpin for PatPath","synthetic":true,"types":[]},{"text":"impl Unpin for PatTuple","synthetic":true,"types":[]},{"text":"impl Unpin for PatBox","synthetic":true,"types":[]},{"text":"impl Unpin for PatRef","synthetic":true,"types":[]},{"text":"impl Unpin for PatLit","synthetic":true,"types":[]},{"text":"impl Unpin for PatRange","synthetic":true,"types":[]},{"text":"impl Unpin for PatSlice","synthetic":true,"types":[]},{"text":"impl Unpin for PatMacro","synthetic":true,"types":[]},{"text":"impl Unpin for PatVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for Arm","synthetic":true,"types":[]},{"text":"impl Unpin for RangeLimits","synthetic":true,"types":[]},{"text":"impl Unpin for FieldPat","synthetic":true,"types":[]},{"text":"impl Unpin for Generics","synthetic":true,"types":[]},{"text":"impl Unpin for GenericParam","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParam","synthetic":true,"types":[]},{"text":"impl Unpin for LifetimeDef","synthetic":true,"types":[]},{"text":"impl Unpin for ConstParam","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParamBound","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBound","synthetic":true,"types":[]},{"text":"impl Unpin for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl Unpin for WhereClause","synthetic":true,"types":[]},{"text":"impl Unpin for WherePredicate","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateType","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl Unpin for PredicateEq","synthetic":true,"types":[]},{"text":"impl Unpin for Item","synthetic":true,"types":[]},{"text":"impl Unpin for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl Unpin for ItemUse","synthetic":true,"types":[]},{"text":"impl Unpin for ItemStatic","synthetic":true,"types":[]},{"text":"impl Unpin for ItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for ItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMod","synthetic":true,"types":[]},{"text":"impl Unpin for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl Unpin for ItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ItemExistential","synthetic":true,"types":[]},{"text":"impl Unpin for ItemStruct","synthetic":true,"types":[]},{"text":"impl Unpin for ItemEnum","synthetic":true,"types":[]},{"text":"impl Unpin for ItemUnion","synthetic":true,"types":[]},{"text":"impl Unpin for ItemTrait","synthetic":true,"types":[]},{"text":"impl Unpin for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl Unpin for ItemImpl","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ItemMacro2","synthetic":true,"types":[]},{"text":"impl Unpin for ItemVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for UseTree","synthetic":true,"types":[]},{"text":"impl Unpin for UsePath","synthetic":true,"types":[]},{"text":"impl Unpin for UseName","synthetic":true,"types":[]},{"text":"impl Unpin for UseRename","synthetic":true,"types":[]},{"text":"impl Unpin for UseGlob","synthetic":true,"types":[]},{"text":"impl Unpin for UseGroup","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItem","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ForeignItemVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItem","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemType","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TraitItemVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItem","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemConst","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemType","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemExistential","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl Unpin for ImplItemVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for MethodSig","synthetic":true,"types":[]},{"text":"impl Unpin for FnDecl","synthetic":true,"types":[]},{"text":"impl Unpin for FnArg","synthetic":true,"types":[]},{"text":"impl Unpin for ArgSelfRef","synthetic":true,"types":[]},{"text":"impl Unpin for ArgSelf","synthetic":true,"types":[]},{"text":"impl Unpin for ArgCaptured","synthetic":true,"types":[]},{"text":"impl Unpin for File","synthetic":true,"types":[]},{"text":"impl Unpin for Lifetime","synthetic":true,"types":[]},{"text":"impl Unpin for Lit","synthetic":true,"types":[]},{"text":"impl Unpin for LitStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitByteStr","synthetic":true,"types":[]},{"text":"impl Unpin for LitByte","synthetic":true,"types":[]},{"text":"impl Unpin for LitChar","synthetic":true,"types":[]},{"text":"impl Unpin for LitInt","synthetic":true,"types":[]},{"text":"impl Unpin for LitFloat","synthetic":true,"types":[]},{"text":"impl Unpin for LitBool","synthetic":true,"types":[]},{"text":"impl Unpin for LitVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for StrStyle","synthetic":true,"types":[]},{"text":"impl Unpin for IntSuffix","synthetic":true,"types":[]},{"text":"impl Unpin for FloatSuffix","synthetic":true,"types":[]},{"text":"impl Unpin for Macro","synthetic":true,"types":[]},{"text":"impl Unpin for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl Unpin for DeriveInput","synthetic":true,"types":[]},{"text":"impl Unpin for Data","synthetic":true,"types":[]},{"text":"impl Unpin for DataStruct","synthetic":true,"types":[]},{"text":"impl Unpin for DataEnum","synthetic":true,"types":[]},{"text":"impl Unpin for DataUnion","synthetic":true,"types":[]},{"text":"impl Unpin for BinOp","synthetic":true,"types":[]},{"text":"impl Unpin for UnOp","synthetic":true,"types":[]},{"text":"impl Unpin for Type","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSlice","synthetic":true,"types":[]},{"text":"impl Unpin for TypeArray","synthetic":true,"types":[]},{"text":"impl Unpin for TypePtr","synthetic":true,"types":[]},{"text":"impl Unpin for TypeReference","synthetic":true,"types":[]},{"text":"impl Unpin for TypeBareFn","synthetic":true,"types":[]},{"text":"impl Unpin for TypeNever","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTuple","synthetic":true,"types":[]},{"text":"impl Unpin for TypePath","synthetic":true,"types":[]},{"text":"impl Unpin for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl Unpin for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl Unpin for TypeParen","synthetic":true,"types":[]},{"text":"impl Unpin for TypeGroup","synthetic":true,"types":[]},{"text":"impl Unpin for TypeInfer","synthetic":true,"types":[]},{"text":"impl Unpin for TypeMacro","synthetic":true,"types":[]},{"text":"impl Unpin for TypeVerbatim","synthetic":true,"types":[]},{"text":"impl Unpin for Abi","synthetic":true,"types":[]},{"text":"impl Unpin for BareFnArg","synthetic":true,"types":[]},{"text":"impl Unpin for BareFnArgName","synthetic":true,"types":[]},{"text":"impl Unpin for ReturnType","synthetic":true,"types":[]},{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for PathSegment","synthetic":true,"types":[]},{"text":"impl Unpin for PathArguments","synthetic":true,"types":[]},{"text":"impl Unpin for GenericArgument","synthetic":true,"types":[]},{"text":"impl Unpin for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for Binding","synthetic":true,"types":[]},{"text":"impl Unpin for Constraint","synthetic":true,"types":[]},{"text":"impl Unpin for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl Unpin for QSelf","synthetic":true,"types":[]},{"text":"impl Unpin for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for Pairs&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Unpin for PairsMut&lt;'a, T, P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for IntoIter&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Unpin for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; Unpin for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]}];
implementors["time"] = [{"text":"impl Unpin for Duration","synthetic":true,"types":[]},{"text":"impl Unpin for OutOfRangeError","synthetic":true,"types":[]},{"text":"impl Unpin for Timespec","synthetic":true,"types":[]},{"text":"impl Unpin for PreciseTime","synthetic":true,"types":[]},{"text":"impl Unpin for SteadyTime","synthetic":true,"types":[]},{"text":"impl Unpin for Tm","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for TmFmt&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A&gt; Unpin for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Unpin for ArrayVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for ArrayVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Unpin for ArrayVecDrain&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Unpin for SliceVec&lt;'s, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p, 's, T&gt; Unpin for SliceVecDrain&lt;'p, 's, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;'s: 'p,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'p, A&gt; Unpin for TinyVecDrain&lt;'p, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'p, A, I&gt; Unpin for TinyVecSplice&lt;'p, A, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Unpin for TinyVecIterator&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;A as Array&gt;::Item: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["toml"] = [{"text":"impl Unpin for Datetime","synthetic":true,"types":[]},{"text":"impl Unpin for DatetimeParseError","synthetic":true,"types":[]},{"text":"impl Unpin for Value","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Serializer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Deserializer&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["typenum"] = [{"text":"impl Unpin for B0","synthetic":true,"types":[]},{"text":"impl Unpin for B1","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Unpin for PInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;U&gt; Unpin for NInt&lt;U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Z0","synthetic":true,"types":[]},{"text":"impl Unpin for UTerm","synthetic":true,"types":[]},{"text":"impl&lt;U, B&gt; Unpin for UInt&lt;U, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for ATerm","synthetic":true,"types":[]},{"text":"impl&lt;V, A&gt; Unpin for TArr&lt;V, A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Greater","synthetic":true,"types":[]},{"text":"impl Unpin for Less","synthetic":true,"types":[]},{"text":"impl Unpin for Equal","synthetic":true,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S&gt; Unpin for UniCase&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Unpin for Level","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for BidiClass","synthetic":true,"types":[]},{"text":"impl Unpin for ParagraphInfo","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for InitialInfo&lt;'text&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'text&gt; Unpin for BidiInfo&lt;'text&gt;","synthetic":true,"types":[]}];
implementors["unicode_normalization"] = [{"text":"impl&lt;I&gt; Unpin for Decompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for IsNormalized","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for Recompositions&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I&gt; Unpin for StreamSafe&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["unicode_segmentation"] = [{"text":"impl&lt;'a&gt; Unpin for GraphemeIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for Graphemes&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for GraphemeCursor","synthetic":true,"types":[]},{"text":"impl Unpin for GraphemeIncomplete","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnicodeWords&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UWordBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UWordBoundIndices&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UnicodeSentences&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for USentenceBounds&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for USentenceBoundIndices&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["universal_hash"] = [{"text":"impl&lt;N&gt; Unpin for Output&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;N as ArrayLength&lt;u8&gt;&gt;::ArrayType: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]}];
implementors["url"] = [{"text":"impl&lt;S&gt; Unpin for Host&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Origin","synthetic":true,"types":[]},{"text":"impl Unpin for OpaqueOrigin","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl Unpin for SyntaxViolation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for PathSegmentsMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Position","synthetic":true,"types":[]},{"text":"impl Unpin for Url","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for ParseOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UrlQuery&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["uuid"] = [{"text":"impl Unpin for Hyphenated","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for HyphenatedRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Simple","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for SimpleRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Urn","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Unpin for UrnRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for Builder","synthetic":true,"types":[]},{"text":"impl Unpin for Expected","synthetic":true,"types":[]},{"text":"impl Unpin for ParseError","synthetic":true,"types":[]},{"text":"impl Unpin for BytesError","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for Version","synthetic":true,"types":[]},{"text":"impl Unpin for Variant","synthetic":true,"types":[]},{"text":"impl Unpin for Uuid","synthetic":true,"types":[]}];
implementors["walkdir"] = [{"text":"impl Unpin for DirEntry","synthetic":true,"types":[]},{"text":"impl Unpin for Error","synthetic":true,"types":[]},{"text":"impl Unpin for WalkDir","synthetic":true,"types":[]},{"text":"impl Unpin for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;I, P&gt; Unpin for FilterEntry&lt;I, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Unpin,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["wyz"] = [{"text":"impl&lt;T&gt; Unpin for FmtBinary&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtDisplay&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtLowerExp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtLowerHex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtOctal&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtPointer&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtUpperExp&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for FmtUpperHex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["yansi"] = [{"text":"impl&lt;T&gt; Unpin for Paint&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Unpin for Style","synthetic":true,"types":[]},{"text":"impl Unpin for Color","synthetic":true,"types":[]}];
implementors["zeroize"] = [{"text":"impl&lt;Z&gt; Unpin for Zeroizing&lt;Z&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Z: Unpin,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()