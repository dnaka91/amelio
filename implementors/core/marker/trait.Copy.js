(function() {var implementors = {};
implementors["aead"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["amelio"] = [{"text":"impl Copy for ConnectionCustomizer","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for id","synthetic":false,"types":[]},{"text":"impl Copy for ticket_id","synthetic":false,"types":[]},{"text":"impl Copy for creator_id","synthetic":false,"types":[]},{"text":"impl Copy for timestamp","synthetic":false,"types":[]},{"text":"impl Copy for message","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for id","synthetic":false,"types":[]},{"text":"impl Copy for code","synthetic":false,"types":[]},{"text":"impl Copy for title","synthetic":false,"types":[]},{"text":"impl Copy for author_id","synthetic":false,"types":[]},{"text":"impl Copy for tutor_id","synthetic":false,"types":[]},{"text":"impl Copy for active","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for ticket_id","synthetic":false,"types":[]},{"text":"impl Copy for url","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for ticket_id","synthetic":false,"types":[]},{"text":"impl Copy for question","synthetic":false,"types":[]},{"text":"impl Copy for answer","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for ticket_id","synthetic":false,"types":[]},{"text":"impl Copy for time","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for ticket_id","synthetic":false,"types":[]},{"text":"impl Copy for page","synthetic":false,"types":[]},{"text":"impl Copy for line","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for id","synthetic":false,"types":[]},{"text":"impl Copy for created","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for id","synthetic":false,"types":[]},{"text":"impl Copy for type_","synthetic":false,"types":[]},{"text":"impl Copy for title","synthetic":false,"types":[]},{"text":"impl Copy for description","synthetic":false,"types":[]},{"text":"impl Copy for category","synthetic":false,"types":[]},{"text":"impl Copy for priority","synthetic":false,"types":[]},{"text":"impl Copy for status","synthetic":false,"types":[]},{"text":"impl Copy for forwarded","synthetic":false,"types":[]},{"text":"impl Copy for course_id","synthetic":false,"types":[]},{"text":"impl Copy for creator_id","synthetic":false,"types":[]},{"text":"impl Copy for table","synthetic":false,"types":[]},{"text":"impl Copy for star","synthetic":false,"types":[]},{"text":"impl Copy for id","synthetic":false,"types":[]},{"text":"impl Copy for username","synthetic":false,"types":[]},{"text":"impl Copy for password","synthetic":false,"types":[]},{"text":"impl Copy for name","synthetic":false,"types":[]},{"text":"impl Copy for role","synthetic":false,"types":[]},{"text":"impl Copy for active","synthetic":false,"types":[]},{"text":"impl Copy for code","synthetic":false,"types":[]},{"text":"impl Copy for Role","synthetic":false,"types":[]},{"text":"impl Copy for TicketType","synthetic":false,"types":[]},{"text":"impl Copy for MediumType","synthetic":false,"types":[]},{"text":"impl Copy for Category","synthetic":false,"types":[]},{"text":"impl Copy for Priority","synthetic":false,"types":[]},{"text":"impl Copy for Status","synthetic":false,"types":[]},{"text":"impl Copy for MessageCode","synthetic":false,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A:&nbsp;Copy&gt; Copy for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Array&lt;Item = u8&gt; + Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Index: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for CapacityError&lt;T&gt;","synthetic":false,"types":[]}];
implementors["askama_shared"] = [{"text":"impl Copy for LoopItem","synthetic":false,"types":[]},{"text":"impl Copy for Integrations","synthetic":false,"types":[]}];
implementors["atty"] = [{"text":"impl Copy for Stream","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Copy for CharacterSet","synthetic":false,"types":[]},{"text":"impl Copy for Config","synthetic":false,"types":[]}];
implementors["bitvec"] = [{"text":"impl&lt;O:&nbsp;Copy, V:&nbsp;Copy&gt; Copy for BitArray&lt;O, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: BitView + Sized,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;O, T, '_&gt; Copy for BitDomain&lt;'_, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, '_&gt; Copy for Domain&lt;'_, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Copy&gt; Copy for BitIdx&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: BitRegister,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Copy&gt; Copy for BitTail&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: BitRegister,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Copy&gt; Copy for BitPos&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: BitRegister,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Copy&gt; Copy for BitSel&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: BitRegister,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;R:&nbsp;Copy&gt; Copy for BitMask&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: BitRegister,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for Msb0","synthetic":false,"types":[]},{"text":"impl Copy for Lsb0","synthetic":false,"types":[]},{"text":"impl&lt;O, T, '_&gt; Copy for Iter&lt;'_, O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: BitOrder,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: BitStore,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["block_cipher_trait"] = [{"text":"impl Copy for InvalidKeyLength","synthetic":false,"types":[]}];
implementors["block_padding"] = [{"text":"impl Copy for PadError","synthetic":false,"types":[]},{"text":"impl Copy for UnpadError","synthetic":false,"types":[]}];
implementors["blowfish"] = [{"text":"impl&lt;T:&nbsp;Copy + ByteOrder&gt; Copy for Blowfish&lt;T&gt;","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Copy for BigEndian","synthetic":false,"types":[]},{"text":"impl Copy for LittleEndian","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for LocalResult&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for FixedOffset","synthetic":false,"types":[]},{"text":"impl Copy for Local","synthetic":false,"types":[]},{"text":"impl Copy for Utc","synthetic":false,"types":[]},{"text":"impl Copy for NaiveDate","synthetic":false,"types":[]},{"text":"impl Copy for NaiveDateTime","synthetic":false,"types":[]},{"text":"impl Copy for IsoWeek","synthetic":false,"types":[]},{"text":"impl Copy for NaiveTime","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Copy for Date&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for SecondsFormat","synthetic":false,"types":[]},{"text":"impl&lt;Tz:&nbsp;TimeZone&gt; Copy for DateTime&lt;Tz&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Tz as TimeZone&gt;::Offset: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for Pad","synthetic":false,"types":[]},{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for RoundingError","synthetic":false,"types":[]},{"text":"impl Copy for Weekday","synthetic":false,"types":[]},{"text":"impl Copy for Month","synthetic":false,"types":[]}];
implementors["chrono_tz"] = [{"text":"impl Copy for Tz","synthetic":false,"types":[]}];
implementors["cipher"] = [{"text":"impl Copy for InvalidKeyLength","synthetic":false,"types":[]},{"text":"impl Copy for LoopError","synthetic":false,"types":[]},{"text":"impl Copy for InvalidKeyNonceLength","synthetic":false,"types":[]},{"text":"impl Copy for OverflowError","synthetic":false,"types":[]}];
implementors["cookie"] = [{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for SameSite","synthetic":false,"types":[]}];
implementors["crypto_mac"] = [{"text":"impl Copy for MacError","synthetic":false,"types":[]},{"text":"impl Copy for InvalidKeyLength","synthetic":false,"types":[]}];
implementors["devise_core"] = [{"text":"impl&lt;'p&gt; Copy for FieldParent&lt;'p&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'p&gt; Copy for Fields&lt;'p&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'f&gt; Copy for Field&lt;'f&gt;","synthetic":false,"types":[]},{"text":"impl Copy for GenericSupport","synthetic":false,"types":[]},{"text":"impl Copy for DataSupport","synthetic":false,"types":[]},{"text":"impl&lt;'p, T&gt; Copy for Derived&lt;'p, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for MetaItem&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for MetaItemList&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for SpanWrapped&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for GenericKind","synthetic":false,"types":[]}];
implementors["diesel"] = [{"text":"impl Copy for now","synthetic":false,"types":[]},{"text":"impl&lt;Query:&nbsp;Copy, Value:&nbsp;Copy&gt; Copy for UncheckedBind&lt;Query, Value&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy, U:&nbsp;Copy, Ret:&nbsp;Copy&gt; Copy for DeleteStatement&lt;T, U, Ret&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy, Op:&nbsp;Copy&gt; Copy for IncompleteInsertStatement&lt;T, Op&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy, U:&nbsp;Copy, Op:&nbsp;Copy, Ret:&nbsp;Copy&gt; Copy for InsertStatement&lt;T, U, Op, Ret&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy, U:&nbsp;Copy, V:&nbsp;Copy, Ret:&nbsp;Copy&gt; Copy for UpdateStatement&lt;T, U, V, Ret&gt;","synthetic":false,"types":[]},{"text":"impl Copy for DatabaseErrorKind","synthetic":false,"types":[]},{"text":"impl Copy for UnexpectedNullError","synthetic":false,"types":[]},{"text":"impl Copy for IsNull","synthetic":false,"types":[]},{"text":"impl&lt;'a, T:&nbsp;Copy, DB:&nbsp;Copy&gt; Copy for Output&lt;'a, T, DB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DB: TypeMetadata,<br>&nbsp;&nbsp;&nbsp;&nbsp;DB::MetadataLookup: 'a,<br>&nbsp;&nbsp;&nbsp;&nbsp;DB::MetadataLookup: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for Bool","synthetic":false,"types":[]},{"text":"impl Copy for TinyInt","synthetic":false,"types":[]},{"text":"impl Copy for SmallInt","synthetic":false,"types":[]},{"text":"impl Copy for Integer","synthetic":false,"types":[]},{"text":"impl Copy for BigInt","synthetic":false,"types":[]},{"text":"impl Copy for Float","synthetic":false,"types":[]},{"text":"impl Copy for Double","synthetic":false,"types":[]},{"text":"impl Copy for Numeric","synthetic":false,"types":[]},{"text":"impl Copy for Text","synthetic":false,"types":[]},{"text":"impl Copy for Binary","synthetic":false,"types":[]},{"text":"impl Copy for Date","synthetic":false,"types":[]},{"text":"impl Copy for Interval","synthetic":false,"types":[]},{"text":"impl Copy for Time","synthetic":false,"types":[]},{"text":"impl Copy for Timestamp","synthetic":false,"types":[]},{"text":"impl&lt;ST:&nbsp;Copy + NotNull&gt; Copy for Nullable&lt;ST&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Sqlite","synthetic":false,"types":[]},{"text":"impl Copy for SqliteType","synthetic":false,"types":[]}];
implementors["digest"] = [{"text":"impl Copy for InvalidOutputSize","synthetic":false,"types":[]}];
implementors["email"] = [{"text":"impl Copy for MimeContentTransferEncoding","synthetic":false,"types":[]},{"text":"impl Copy for MimeMultipartType","synthetic":false,"types":[]}];
implementors["encoding"] = [{"text":"impl Copy for DecoderTrap","synthetic":false,"types":[]},{"text":"impl Copy for EncoderTrap","synthetic":false,"types":[]},{"text":"impl Copy for ErrorEncoding","synthetic":false,"types":[]},{"text":"impl Copy for ErrorEncoder","synthetic":false,"types":[]},{"text":"impl Copy for ErrorDecoder","synthetic":false,"types":[]},{"text":"impl Copy for ASCIIEncoding","synthetic":false,"types":[]},{"text":"impl Copy for ASCIIEncoder","synthetic":false,"types":[]},{"text":"impl Copy for ASCIIDecoder","synthetic":false,"types":[]},{"text":"impl Copy for SingleByteEncoding","synthetic":false,"types":[]},{"text":"impl Copy for SingleByteEncoder","synthetic":false,"types":[]},{"text":"impl Copy for SingleByteDecoder","synthetic":false,"types":[]},{"text":"impl Copy for UTF8Encoding","synthetic":false,"types":[]},{"text":"impl Copy for UTF8Encoder","synthetic":false,"types":[]},{"text":"impl Copy for UTF8Decoder","synthetic":false,"types":[]},{"text":"impl Copy for Little","synthetic":false,"types":[]},{"text":"impl Copy for Big","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Copy&gt; Copy for UTF16Encoding&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E:&nbsp;Copy&gt; Copy for UTF16Encoder&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Windows949Encoding","synthetic":false,"types":[]},{"text":"impl Copy for Windows949Encoder","synthetic":false,"types":[]},{"text":"impl Copy for EUCJPEncoding","synthetic":false,"types":[]},{"text":"impl Copy for EUCJPEncoder","synthetic":false,"types":[]},{"text":"impl Copy for Windows31JEncoding","synthetic":false,"types":[]},{"text":"impl Copy for Windows31JEncoder","synthetic":false,"types":[]},{"text":"impl Copy for ISO2022JPEncoding","synthetic":false,"types":[]},{"text":"impl Copy for ISO2022JPEncoder","synthetic":false,"types":[]},{"text":"impl Copy for GBK","synthetic":false,"types":[]},{"text":"impl Copy for GB18030","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for GBEncoding&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for GBEncoder&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for HZEncoding","synthetic":false,"types":[]},{"text":"impl Copy for HZEncoder","synthetic":false,"types":[]},{"text":"impl Copy for BigFive2003Encoding","synthetic":false,"types":[]},{"text":"impl Copy for BigFive2003Encoder","synthetic":false,"types":[]},{"text":"impl Copy for EncoderOnlyUTF8Encoding","synthetic":false,"types":[]}];
implementors["fake_simd"] = [{"text":"impl Copy for u32x4","synthetic":false,"types":[]},{"text":"impl Copy for u64x2","synthetic":false,"types":[]}];
implementors["form_urlencoded"] = [{"text":"impl&lt;'a&gt; Copy for Parse&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;Copy, N&gt; Copy for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;N::ArrayType: Copy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["glob"] = [{"text":"impl Copy for MatchOptions","synthetic":false,"types":[]}];
implementors["hkdf"] = [{"text":"impl Copy for InvalidPrkLength","synthetic":false,"types":[]},{"text":"impl Copy for InvalidLength","synthetic":false,"types":[]}];
implementors["httparse"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Status&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Header&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["humansize"] = [{"text":"impl Copy for Kilo","synthetic":false,"types":[]},{"text":"impl Copy for FixedAt","synthetic":false,"types":[]}];
implementors["hyper"] = [{"text":"impl Copy for RedirectPolicy","synthetic":false,"types":[]},{"text":"impl Copy for ContentLength","synthetic":false,"types":[]},{"text":"impl Copy for Expect","synthetic":false,"types":[]},{"text":"impl Copy for HttpDate","synthetic":false,"types":[]},{"text":"impl Copy for Quality","synthetic":false,"types":[]},{"text":"impl Copy for HTTP_VALUE","synthetic":false,"types":[]},{"text":"impl Copy for StatusCode","synthetic":false,"types":[]},{"text":"impl Copy for StatusClass","synthetic":false,"types":[]},{"text":"impl Copy for HttpVersion","synthetic":false,"types":[]}];
implementors["idna"] = [{"text":"impl Copy for Config","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Copy for Buffer","synthetic":false,"types":[]}];
implementors["lettre"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl Copy for Mechanism","synthetic":false,"types":[]},{"text":"impl Copy for ClientCodec","synthetic":false,"types":[]},{"text":"impl Copy for StarttlsCommand","synthetic":false,"types":[]},{"text":"impl Copy for DataCommand","synthetic":false,"types":[]},{"text":"impl Copy for QuitCommand","synthetic":false,"types":[]},{"text":"impl Copy for NoopCommand","synthetic":false,"types":[]},{"text":"impl Copy for RsetCommand","synthetic":false,"types":[]},{"text":"impl Copy for Extension","synthetic":false,"types":[]},{"text":"impl Copy for MailBodyParameter","synthetic":false,"types":[]},{"text":"impl Copy for Severity","synthetic":false,"types":[]},{"text":"impl Copy for Category","synthetic":false,"types":[]},{"text":"impl Copy for Detail","synthetic":false,"types":[]},{"text":"impl Copy for Code","synthetic":false,"types":[]},{"text":"impl Copy for ConnectionReuseParameters","synthetic":false,"types":[]},{"text":"impl Copy for StubTransport","synthetic":false,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Copy for ErrorCode","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["libc"] = [{"text":"impl Copy for DIR","synthetic":false,"types":[]},{"text":"impl Copy for group","synthetic":false,"types":[]},{"text":"impl Copy for utimbuf","synthetic":false,"types":[]},{"text":"impl Copy for timeval","synthetic":false,"types":[]},{"text":"impl Copy for timespec","synthetic":false,"types":[]},{"text":"impl Copy for rlimit","synthetic":false,"types":[]},{"text":"impl Copy for rusage","synthetic":false,"types":[]},{"text":"impl Copy for ipv6_mreq","synthetic":false,"types":[]},{"text":"impl Copy for hostent","synthetic":false,"types":[]},{"text":"impl Copy for iovec","synthetic":false,"types":[]},{"text":"impl Copy for pollfd","synthetic":false,"types":[]},{"text":"impl Copy for winsize","synthetic":false,"types":[]},{"text":"impl Copy for linger","synthetic":false,"types":[]},{"text":"impl Copy for sigval","synthetic":false,"types":[]},{"text":"impl Copy for itimerval","synthetic":false,"types":[]},{"text":"impl Copy for tms","synthetic":false,"types":[]},{"text":"impl Copy for servent","synthetic":false,"types":[]},{"text":"impl Copy for protoent","synthetic":false,"types":[]},{"text":"impl Copy for FILE","synthetic":false,"types":[]},{"text":"impl Copy for fpos_t","synthetic":false,"types":[]},{"text":"impl Copy for timezone","synthetic":false,"types":[]},{"text":"impl Copy for in_addr","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreq","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreq_source","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_in","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_in6","synthetic":false,"types":[]},{"text":"impl Copy for addrinfo","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_ll","synthetic":false,"types":[]},{"text":"impl Copy for fd_set","synthetic":false,"types":[]},{"text":"impl Copy for tm","synthetic":false,"types":[]},{"text":"impl Copy for sched_param","synthetic":false,"types":[]},{"text":"impl Copy for Dl_info","synthetic":false,"types":[]},{"text":"impl Copy for lconv","synthetic":false,"types":[]},{"text":"impl Copy for in_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for ifaddrs","synthetic":false,"types":[]},{"text":"impl Copy for in6_rtmsg","synthetic":false,"types":[]},{"text":"impl Copy for arpreq","synthetic":false,"types":[]},{"text":"impl Copy for arpreq_old","synthetic":false,"types":[]},{"text":"impl Copy for arphdr","synthetic":false,"types":[]},{"text":"impl Copy for mmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for epoll_event","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_un","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_storage","synthetic":false,"types":[]},{"text":"impl Copy for utsname","synthetic":false,"types":[]},{"text":"impl Copy for sigevent","synthetic":false,"types":[]},{"text":"impl Copy for fpos64_t","synthetic":false,"types":[]},{"text":"impl Copy for rlimit64","synthetic":false,"types":[]},{"text":"impl Copy for glob_t","synthetic":false,"types":[]},{"text":"impl Copy for passwd","synthetic":false,"types":[]},{"text":"impl Copy for spwd","synthetic":false,"types":[]},{"text":"impl Copy for dqblk","synthetic":false,"types":[]},{"text":"impl Copy for signalfd_siginfo","synthetic":false,"types":[]},{"text":"impl Copy for itimerspec","synthetic":false,"types":[]},{"text":"impl Copy for fsid_t","synthetic":false,"types":[]},{"text":"impl Copy for packet_mreq","synthetic":false,"types":[]},{"text":"impl Copy for cpu_set_t","synthetic":false,"types":[]},{"text":"impl Copy for if_nameindex","synthetic":false,"types":[]},{"text":"impl Copy for msginfo","synthetic":false,"types":[]},{"text":"impl Copy for sembuf","synthetic":false,"types":[]},{"text":"impl Copy for input_event","synthetic":false,"types":[]},{"text":"impl Copy for input_id","synthetic":false,"types":[]},{"text":"impl Copy for input_absinfo","synthetic":false,"types":[]},{"text":"impl Copy for input_keymap_entry","synthetic":false,"types":[]},{"text":"impl Copy for input_mask","synthetic":false,"types":[]},{"text":"impl Copy for ff_replay","synthetic":false,"types":[]},{"text":"impl Copy for ff_trigger","synthetic":false,"types":[]},{"text":"impl Copy for ff_envelope","synthetic":false,"types":[]},{"text":"impl Copy for ff_constant_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_ramp_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_condition_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_periodic_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_rumble_effect","synthetic":false,"types":[]},{"text":"impl Copy for ff_effect","synthetic":false,"types":[]},{"text":"impl Copy for dl_phdr_info","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Ehdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Ehdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Sym","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Sym","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Phdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Phdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Shdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Shdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf32_Chdr","synthetic":false,"types":[]},{"text":"impl Copy for Elf64_Chdr","synthetic":false,"types":[]},{"text":"impl Copy for ucred","synthetic":false,"types":[]},{"text":"impl Copy for mntent","synthetic":false,"types":[]},{"text":"impl Copy for posix_spawn_file_actions_t","synthetic":false,"types":[]},{"text":"impl Copy for posix_spawnattr_t","synthetic":false,"types":[]},{"text":"impl Copy for genlmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for in6_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for arpd_request","synthetic":false,"types":[]},{"text":"impl Copy for inotify_event","synthetic":false,"types":[]},{"text":"impl Copy for fanotify_response","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_vm","synthetic":false,"types":[]},{"text":"impl Copy for regmatch_t","synthetic":false,"types":[]},{"text":"impl Copy for sock_extended_err","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_nl","synthetic":false,"types":[]},{"text":"impl Copy for dirent","synthetic":false,"types":[]},{"text":"impl Copy for dirent64","synthetic":false,"types":[]},{"text":"impl Copy for sockaddr_alg","synthetic":false,"types":[]},{"text":"impl Copy for af_alg_iv","synthetic":false,"types":[]},{"text":"impl Copy for mq_attr","synthetic":false,"types":[]},{"text":"impl Copy for statx","synthetic":false,"types":[]},{"text":"impl Copy for statx_timestamp","synthetic":false,"types":[]},{"text":"impl Copy for aiocb","synthetic":false,"types":[]},{"text":"impl Copy for __exit_status","synthetic":false,"types":[]},{"text":"impl Copy for __timeval","synthetic":false,"types":[]},{"text":"impl Copy for glob64_t","synthetic":false,"types":[]},{"text":"impl Copy for msghdr","synthetic":false,"types":[]},{"text":"impl Copy for cmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for termios","synthetic":false,"types":[]},{"text":"impl Copy for mallinfo","synthetic":false,"types":[]},{"text":"impl Copy for nlmsghdr","synthetic":false,"types":[]},{"text":"impl Copy for nlmsgerr","synthetic":false,"types":[]},{"text":"impl Copy for nl_pktinfo","synthetic":false,"types":[]},{"text":"impl Copy for nl_mmap_req","synthetic":false,"types":[]},{"text":"impl Copy for nl_mmap_hdr","synthetic":false,"types":[]},{"text":"impl Copy for nlattr","synthetic":false,"types":[]},{"text":"impl Copy for rtentry","synthetic":false,"types":[]},{"text":"impl Copy for timex","synthetic":false,"types":[]},{"text":"impl Copy for ntptimeval","synthetic":false,"types":[]},{"text":"impl Copy for regex_t","synthetic":false,"types":[]},{"text":"impl Copy for utmpx","synthetic":false,"types":[]},{"text":"impl Copy for sigset_t","synthetic":false,"types":[]},{"text":"impl Copy for sysinfo","synthetic":false,"types":[]},{"text":"impl Copy for msqid_ds","synthetic":false,"types":[]},{"text":"impl Copy for sigaction","synthetic":false,"types":[]},{"text":"impl Copy for statfs","synthetic":false,"types":[]},{"text":"impl Copy for flock","synthetic":false,"types":[]},{"text":"impl Copy for flock64","synthetic":false,"types":[]},{"text":"impl Copy for siginfo_t","synthetic":false,"types":[]},{"text":"impl Copy for stack_t","synthetic":false,"types":[]},{"text":"impl Copy for stat","synthetic":false,"types":[]},{"text":"impl Copy for stat64","synthetic":false,"types":[]},{"text":"impl Copy for statfs64","synthetic":false,"types":[]},{"text":"impl Copy for statvfs64","synthetic":false,"types":[]},{"text":"impl Copy for pthread_attr_t","synthetic":false,"types":[]},{"text":"impl Copy for _libc_fpxreg","synthetic":false,"types":[]},{"text":"impl Copy for _libc_xmmreg","synthetic":false,"types":[]},{"text":"impl Copy for _libc_fpstate","synthetic":false,"types":[]},{"text":"impl Copy for user_regs_struct","synthetic":false,"types":[]},{"text":"impl Copy for user","synthetic":false,"types":[]},{"text":"impl Copy for mcontext_t","synthetic":false,"types":[]},{"text":"impl Copy for ipc_perm","synthetic":false,"types":[]},{"text":"impl Copy for shmid_ds","synthetic":false,"types":[]},{"text":"impl Copy for termios2","synthetic":false,"types":[]},{"text":"impl Copy for ip_mreqn","synthetic":false,"types":[]},{"text":"impl Copy for user_fpregs_struct","synthetic":false,"types":[]},{"text":"impl Copy for ucontext_t","synthetic":false,"types":[]},{"text":"impl Copy for statvfs","synthetic":false,"types":[]},{"text":"impl Copy for max_align_t","synthetic":false,"types":[]},{"text":"impl Copy for sem_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutexattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlockattr_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_condattr_t","synthetic":false,"types":[]},{"text":"impl Copy for fanotify_event_metadata","synthetic":false,"types":[]},{"text":"impl Copy for pthread_cond_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_mutex_t","synthetic":false,"types":[]},{"text":"impl Copy for pthread_rwlock_t","synthetic":false,"types":[]},{"text":"impl Copy for in6_addr","synthetic":false,"types":[]}];
implementors["libsqlite3_sys"] = [{"text":"impl Copy for ErrorCode","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_file","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_io_methods","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_mutex","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_api_routines","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_vfs","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_mem_methods","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_stmt","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_value","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_context","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_module","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_index_info","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_index_info_sqlite3_index_constraint","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_index_info_sqlite3_index_orderby","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_index_info_sqlite3_index_constraint_usage","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_vtab","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_vtab_cursor","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_blob","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_mutex_methods","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_str","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_pcache","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_pcache_page","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_pcache_methods2","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_pcache_methods","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_backup","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_snapshot","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_rtree_geometry","synthetic":false,"types":[]},{"text":"impl Copy for sqlite3_rtree_query_info","synthetic":false,"types":[]},{"text":"impl Copy for Fts5Context","synthetic":false,"types":[]},{"text":"impl Copy for Fts5PhraseIter","synthetic":false,"types":[]},{"text":"impl Copy for Fts5ExtensionApi","synthetic":false,"types":[]},{"text":"impl Copy for Fts5Tokenizer","synthetic":false,"types":[]},{"text":"impl Copy for fts5_tokenizer","synthetic":false,"types":[]},{"text":"impl Copy for fts5_api","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Copy for LogLevel","synthetic":false,"types":[]},{"text":"impl Copy for LogLevelFilter","synthetic":false,"types":[]},{"text":"impl Copy for LogLocation","synthetic":false,"types":[]}];
implementors["migrations_internals"] = [{"text":"impl&lt;'a&gt; Copy for MigrationName&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for MigrationFileName&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["mime"] = [{"text":"impl&lt;'a&gt; Copy for Name&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["mime_guess"] = [{"text":"impl Copy for MimeGuess","synthetic":false,"types":[]}];
implementors["native_tls"] = [{"text":"impl Copy for Protocol","synthetic":false,"types":[]}];
implementors["nix"] = [{"text":"impl Copy for Entry","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for Errno","synthetic":false,"types":[]},{"text":"impl Copy for AtFlags","synthetic":false,"types":[]},{"text":"impl Copy for OFlag","synthetic":false,"types":[]},{"text":"impl Copy for SealFlag","synthetic":false,"types":[]},{"text":"impl Copy for FdFlag","synthetic":false,"types":[]},{"text":"impl Copy for FlockArg","synthetic":false,"types":[]},{"text":"impl Copy for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl Copy for FallocateFlags","synthetic":false,"types":[]},{"text":"impl Copy for PosixFadviseAdvice","synthetic":false,"types":[]},{"text":"impl Copy for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl Copy for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl Copy for MsFlags","synthetic":false,"types":[]},{"text":"impl Copy for MntFlags","synthetic":false,"types":[]},{"text":"impl Copy for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl Copy for FdFlag","synthetic":false,"types":[]},{"text":"impl Copy for MqAttr","synthetic":false,"types":[]},{"text":"impl Copy for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl Copy for PollFd","synthetic":false,"types":[]},{"text":"impl Copy for PollFlags","synthetic":false,"types":[]},{"text":"impl Copy for OpenptyResult","synthetic":false,"types":[]},{"text":"impl Copy for ForkptyResult","synthetic":false,"types":[]},{"text":"impl Copy for CloneFlags","synthetic":false,"types":[]},{"text":"impl Copy for CpuSet","synthetic":false,"types":[]},{"text":"impl Copy for AioFsyncMode","synthetic":false,"types":[]},{"text":"impl Copy for LioOpcode","synthetic":false,"types":[]},{"text":"impl Copy for LioMode","synthetic":false,"types":[]},{"text":"impl Copy for AioCancelStat","synthetic":false,"types":[]},{"text":"impl Copy for EpollFlags","synthetic":false,"types":[]},{"text":"impl Copy for EpollOp","synthetic":false,"types":[]},{"text":"impl Copy for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl Copy for EpollEvent","synthetic":false,"types":[]},{"text":"impl Copy for EfdFlags","synthetic":false,"types":[]},{"text":"impl Copy for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl Copy for ProtFlags","synthetic":false,"types":[]},{"text":"impl Copy for MapFlags","synthetic":false,"types":[]},{"text":"impl Copy for MmapAdvise","synthetic":false,"types":[]},{"text":"impl Copy for MsFlags","synthetic":false,"types":[]},{"text":"impl Copy for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl Copy for Request","synthetic":false,"types":[]},{"text":"impl Copy for Event","synthetic":false,"types":[]},{"text":"impl Copy for Options","synthetic":false,"types":[]},{"text":"impl Copy for QuotaType","synthetic":false,"types":[]},{"text":"impl Copy for QuotaFmt","synthetic":false,"types":[]},{"text":"impl Copy for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl Copy for Dqblk","synthetic":false,"types":[]},{"text":"impl Copy for RebootMode","synthetic":false,"types":[]},{"text":"impl Copy for FdSet","synthetic":false,"types":[]},{"text":"impl Copy for Signal","synthetic":false,"types":[]},{"text":"impl Copy for SignalIterator","synthetic":false,"types":[]},{"text":"impl Copy for SaFlags","synthetic":false,"types":[]},{"text":"impl Copy for SigmaskHow","synthetic":false,"types":[]},{"text":"impl Copy for SigSet","synthetic":false,"types":[]},{"text":"impl Copy for SigHandler","synthetic":false,"types":[]},{"text":"impl Copy for SigAction","synthetic":false,"types":[]},{"text":"impl Copy for SigevNotify","synthetic":false,"types":[]},{"text":"impl Copy for SigEvent","synthetic":false,"types":[]},{"text":"impl Copy for SfdFlags","synthetic":false,"types":[]},{"text":"impl Copy for AddressFamily","synthetic":false,"types":[]},{"text":"impl Copy for InetAddr","synthetic":false,"types":[]},{"text":"impl Copy for IpAddr","synthetic":false,"types":[]},{"text":"impl Copy for Ipv4Addr","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6Addr","synthetic":false,"types":[]},{"text":"impl Copy for UnixAddr","synthetic":false,"types":[]},{"text":"impl Copy for SockAddr","synthetic":false,"types":[]},{"text":"impl Copy for NetlinkAddr","synthetic":false,"types":[]},{"text":"impl Copy for AlgAddr","synthetic":false,"types":[]},{"text":"impl Copy for LinkAddr","synthetic":false,"types":[]},{"text":"impl Copy for VsockAddr","synthetic":false,"types":[]},{"text":"impl Copy for ReuseAddr","synthetic":false,"types":[]},{"text":"impl Copy for ReusePort","synthetic":false,"types":[]},{"text":"impl Copy for TcpNoDelay","synthetic":false,"types":[]},{"text":"impl Copy for Linger","synthetic":false,"types":[]},{"text":"impl Copy for IpAddMembership","synthetic":false,"types":[]},{"text":"impl Copy for IpDropMembership","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6AddMembership","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6DropMembership","synthetic":false,"types":[]},{"text":"impl Copy for IpMulticastTtl","synthetic":false,"types":[]},{"text":"impl Copy for IpMulticastLoop","synthetic":false,"types":[]},{"text":"impl Copy for ReceiveTimeout","synthetic":false,"types":[]},{"text":"impl Copy for SendTimeout","synthetic":false,"types":[]},{"text":"impl Copy for Broadcast","synthetic":false,"types":[]},{"text":"impl Copy for OobInline","synthetic":false,"types":[]},{"text":"impl Copy for SocketError","synthetic":false,"types":[]},{"text":"impl Copy for KeepAlive","synthetic":false,"types":[]},{"text":"impl Copy for PeerCredentials","synthetic":false,"types":[]},{"text":"impl Copy for TcpKeepIdle","synthetic":false,"types":[]},{"text":"impl Copy for RcvBuf","synthetic":false,"types":[]},{"text":"impl Copy for SndBuf","synthetic":false,"types":[]},{"text":"impl Copy for RcvBufForce","synthetic":false,"types":[]},{"text":"impl Copy for SndBufForce","synthetic":false,"types":[]},{"text":"impl Copy for SockType","synthetic":false,"types":[]},{"text":"impl Copy for AcceptConn","synthetic":false,"types":[]},{"text":"impl Copy for BindToDevice","synthetic":false,"types":[]},{"text":"impl Copy for OriginalDst","synthetic":false,"types":[]},{"text":"impl Copy for ReceiveTimestamp","synthetic":false,"types":[]},{"text":"impl Copy for IpTransparent","synthetic":false,"types":[]},{"text":"impl Copy for Mark","synthetic":false,"types":[]},{"text":"impl Copy for PassCred","synthetic":false,"types":[]},{"text":"impl Copy for TcpCongestion","synthetic":false,"types":[]},{"text":"impl Copy for Ipv4PacketInfo","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6RecvPacketInfo","synthetic":false,"types":[]},{"text":"impl Copy for UdpGsoSegment","synthetic":false,"types":[]},{"text":"impl Copy for UdpGroSegment","synthetic":false,"types":[]},{"text":"impl Copy for AlgSetAeadAuthSize","synthetic":false,"types":[]},{"text":"impl Copy for SockType","synthetic":false,"types":[]},{"text":"impl Copy for SockProtocol","synthetic":false,"types":[]},{"text":"impl Copy for SockFlag","synthetic":false,"types":[]},{"text":"impl Copy for MsgFlags","synthetic":false,"types":[]},{"text":"impl Copy for UnixCredentials","synthetic":false,"types":[]},{"text":"impl Copy for IpMembershipRequest","synthetic":false,"types":[]},{"text":"impl Copy for Ipv6MembershipRequest","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for RecvMsg&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for CmsgIterator&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for ControlMessage&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for SockLevel","synthetic":false,"types":[]},{"text":"impl Copy for Shutdown","synthetic":false,"types":[]},{"text":"impl Copy for SFlag","synthetic":false,"types":[]},{"text":"impl Copy for Mode","synthetic":false,"types":[]},{"text":"impl Copy for FchmodatFlags","synthetic":false,"types":[]},{"text":"impl Copy for UtimensatFlags","synthetic":false,"types":[]},{"text":"impl Copy for Statfs","synthetic":false,"types":[]},{"text":"impl Copy for FsType","synthetic":false,"types":[]},{"text":"impl Copy for FsFlags","synthetic":false,"types":[]},{"text":"impl Copy for Statvfs","synthetic":false,"types":[]},{"text":"impl Copy for SysInfo","synthetic":false,"types":[]},{"text":"impl Copy for BaudRate","synthetic":false,"types":[]},{"text":"impl Copy for SetArg","synthetic":false,"types":[]},{"text":"impl Copy for FlushArg","synthetic":false,"types":[]},{"text":"impl Copy for FlowArg","synthetic":false,"types":[]},{"text":"impl Copy for SpecialCharacterIndices","synthetic":false,"types":[]},{"text":"impl Copy for InputFlags","synthetic":false,"types":[]},{"text":"impl Copy for OutputFlags","synthetic":false,"types":[]},{"text":"impl Copy for ControlFlags","synthetic":false,"types":[]},{"text":"impl Copy for LocalFlags","synthetic":false,"types":[]},{"text":"impl Copy for TimeSpec","synthetic":false,"types":[]},{"text":"impl Copy for TimeVal","synthetic":false,"types":[]},{"text":"impl Copy for RemoteIoVec","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for IoVec&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for UtsName","synthetic":false,"types":[]},{"text":"impl Copy for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl Copy for WaitStatus","synthetic":false,"types":[]},{"text":"impl Copy for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl Copy for InitFlags","synthetic":false,"types":[]},{"text":"impl Copy for Inotify","synthetic":false,"types":[]},{"text":"impl Copy for WatchDescriptor","synthetic":false,"types":[]},{"text":"impl Copy for TimerFd","synthetic":false,"types":[]},{"text":"impl Copy for ClockId","synthetic":false,"types":[]},{"text":"impl Copy for TimerFlags","synthetic":false,"types":[]},{"text":"impl Copy for TimerSetTimeFlags","synthetic":false,"types":[]},{"text":"impl Copy for Expiration","synthetic":false,"types":[]},{"text":"impl Copy for UContext","synthetic":false,"types":[]},{"text":"impl Copy for Uid","synthetic":false,"types":[]},{"text":"impl Copy for Gid","synthetic":false,"types":[]},{"text":"impl Copy for Pid","synthetic":false,"types":[]},{"text":"impl Copy for ForkResult","synthetic":false,"types":[]},{"text":"impl Copy for FchownatFlags","synthetic":false,"types":[]},{"text":"impl Copy for Whence","synthetic":false,"types":[]},{"text":"impl Copy for LinkatFlags","synthetic":false,"types":[]},{"text":"impl Copy for UnlinkatFlags","synthetic":false,"types":[]},{"text":"impl Copy for PathconfVar","synthetic":false,"types":[]},{"text":"impl Copy for SysconfVar","synthetic":false,"types":[]},{"text":"impl Copy for AccessFlags","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["num_integer"] = [{"text":"impl&lt;A:&nbsp;Copy&gt; Copy for ExtendedGcd&lt;A&gt;","synthetic":false,"types":[]}];
implementors["openssl"] = [{"text":"impl Copy for CMSOptions","synthetic":false,"types":[]},{"text":"impl Copy for PointConversionForm","synthetic":false,"types":[]},{"text":"impl Copy for Asn1Flag","synthetic":false,"types":[]},{"text":"impl&lt;T, U&gt; Copy for Index&lt;T, U&gt;","synthetic":false,"types":[]},{"text":"impl Copy for MessageDigest","synthetic":false,"types":[]},{"text":"impl Copy for DigestBytes","synthetic":false,"types":[]},{"text":"impl Copy for Nid","synthetic":false,"types":[]},{"text":"impl Copy for OcspFlag","synthetic":false,"types":[]},{"text":"impl Copy for OcspResponseStatus","synthetic":false,"types":[]},{"text":"impl Copy for OcspCertStatus","synthetic":false,"types":[]},{"text":"impl Copy for OcspRevokedStatus","synthetic":false,"types":[]},{"text":"impl Copy for Pkcs7Flags","synthetic":false,"types":[]},{"text":"impl Copy for Id","synthetic":false,"types":[]},{"text":"impl Copy for Padding","synthetic":false,"types":[]},{"text":"impl Copy for SrtpProfileId","synthetic":false,"types":[]},{"text":"impl Copy for ErrorCode","synthetic":false,"types":[]},{"text":"impl Copy for SslOptions","synthetic":false,"types":[]},{"text":"impl Copy for SslMode","synthetic":false,"types":[]},{"text":"impl Copy for SslMethod","synthetic":false,"types":[]},{"text":"impl Copy for SslVerifyMode","synthetic":false,"types":[]},{"text":"impl Copy for SslSessionCacheMode","synthetic":false,"types":[]},{"text":"impl Copy for ExtensionContext","synthetic":false,"types":[]},{"text":"impl Copy for SslFiletype","synthetic":false,"types":[]},{"text":"impl Copy for StatusType","synthetic":false,"types":[]},{"text":"impl Copy for NameType","synthetic":false,"types":[]},{"text":"impl Copy for SniError","synthetic":false,"types":[]},{"text":"impl Copy for SslAlert","synthetic":false,"types":[]},{"text":"impl Copy for AlpnError","synthetic":false,"types":[]},{"text":"impl Copy for ClientHelloResponse","synthetic":false,"types":[]},{"text":"impl Copy for SslVersion","synthetic":false,"types":[]},{"text":"impl Copy for ShutdownResult","synthetic":false,"types":[]},{"text":"impl Copy for ShutdownState","synthetic":false,"types":[]},{"text":"impl Copy for Mode","synthetic":false,"types":[]},{"text":"impl Copy for Cipher","synthetic":false,"types":[]},{"text":"impl Copy for X509CheckFlags","synthetic":false,"types":[]},{"text":"impl Copy for X509VerifyResult","synthetic":false,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Copy for point_conversion_form_t","synthetic":false,"types":[]}];
implementors["parking_lot"] = [{"text":"impl Copy for WaitTimeoutResult","synthetic":false,"types":[]},{"text":"impl Copy for OnceState","synthetic":false,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl Copy for ParkResult","synthetic":false,"types":[]},{"text":"impl Copy for UnparkResult","synthetic":false,"types":[]},{"text":"impl Copy for RequeueOp","synthetic":false,"types":[]},{"text":"impl Copy for FilterOp","synthetic":false,"types":[]},{"text":"impl Copy for UnparkToken","synthetic":false,"types":[]},{"text":"impl Copy for ParkToken","synthetic":false,"types":[]}];
implementors["pear"] = [{"text":"impl&lt;'a&gt; Copy for Position&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["percent_encoding"] = [{"text":"impl Copy for SIMPLE_ENCODE_SET","synthetic":false,"types":[]},{"text":"impl Copy for QUERY_ENCODE_SET","synthetic":false,"types":[]},{"text":"impl Copy for DEFAULT_ENCODE_SET","synthetic":false,"types":[]},{"text":"impl Copy for PATH_SEGMENT_ENCODE_SET","synthetic":false,"types":[]},{"text":"impl Copy for USERINFO_ENCODE_SET","synthetic":false,"types":[]}];
implementors["ppv_lite86"] = [{"text":"impl Copy for YesS3","synthetic":false,"types":[]},{"text":"impl Copy for NoS3","synthetic":false,"types":[]},{"text":"impl Copy for YesS4","synthetic":false,"types":[]},{"text":"impl Copy for NoS4","synthetic":false,"types":[]},{"text":"impl Copy for YesA1","synthetic":false,"types":[]},{"text":"impl Copy for NoA1","synthetic":false,"types":[]},{"text":"impl Copy for YesA2","synthetic":false,"types":[]},{"text":"impl Copy for NoA2","synthetic":false,"types":[]},{"text":"impl Copy for YesNI","synthetic":false,"types":[]},{"text":"impl Copy for NoNI","synthetic":false,"types":[]},{"text":"impl&lt;S3:&nbsp;Copy, S4:&nbsp;Copy, NI:&nbsp;Copy&gt; Copy for SseMachine&lt;S3, S4, NI&gt;","synthetic":false,"types":[]},{"text":"impl&lt;NI:&nbsp;Copy&gt; Copy for Avx2Machine&lt;NI&gt;","synthetic":false,"types":[]},{"text":"impl Copy for vec128_storage","synthetic":false,"types":[]},{"text":"impl Copy for vec256_storage","synthetic":false,"types":[]},{"text":"impl Copy for vec512_storage","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Delimiter","synthetic":false,"types":[]},{"text":"impl Copy for Spacing","synthetic":false,"types":[]}];
implementors["r2d2"] = [{"text":"impl Copy for NopEventHandler","synthetic":false,"types":[]},{"text":"impl Copy for NopErrorHandler","synthetic":false,"types":[]},{"text":"impl Copy for LoggingErrorHandler","synthetic":false,"types":[]},{"text":"impl Copy for NopConnectionCustomizer","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Copy for Bernoulli","synthetic":false,"types":[]},{"text":"impl Copy for BernoulliError","synthetic":false,"types":[]},{"text":"impl Copy for Binomial","synthetic":false,"types":[]},{"text":"impl Copy for Cauchy","synthetic":false,"types":[]},{"text":"impl Copy for Exp1","synthetic":false,"types":[]},{"text":"impl Copy for Exp","synthetic":false,"types":[]},{"text":"impl Copy for Gamma","synthetic":false,"types":[]},{"text":"impl Copy for ChiSquared","synthetic":false,"types":[]},{"text":"impl Copy for FisherF","synthetic":false,"types":[]},{"text":"impl Copy for StudentT","synthetic":false,"types":[]},{"text":"impl Copy for Beta","synthetic":false,"types":[]},{"text":"impl Copy for StandardNormal","synthetic":false,"types":[]},{"text":"impl Copy for Normal","synthetic":false,"types":[]},{"text":"impl Copy for LogNormal","synthetic":false,"types":[]},{"text":"impl Copy for Pareto","synthetic":false,"types":[]},{"text":"impl Copy for Poisson","synthetic":false,"types":[]},{"text":"impl Copy for Triangular","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy + SampleUniform&gt; Copy for Uniform&lt;X&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;X::Sampler: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy&gt; Copy for UniformInt&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl&lt;X:&nbsp;Copy&gt; Copy for UniformFloat&lt;X&gt;","synthetic":false,"types":[]},{"text":"impl Copy for UniformDuration","synthetic":false,"types":[]},{"text":"impl Copy for UnitCircle","synthetic":false,"types":[]},{"text":"impl Copy for UnitSphereSurface","synthetic":false,"types":[]},{"text":"impl Copy for Weibull","synthetic":false,"types":[]},{"text":"impl Copy for WeightedError","synthetic":false,"types":[]},{"text":"impl Copy for OpenClosed01","synthetic":false,"types":[]},{"text":"impl Copy for Open01","synthetic":false,"types":[]},{"text":"impl Copy for Standard","synthetic":false,"types":[]},{"text":"impl Copy for ThreadRng","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Copy for OsRng","synthetic":false,"types":[]}];
implementors["rocket"] = [{"text":"impl Copy for LoggingLevel","synthetic":false,"types":[]},{"text":"impl&lt;'f&gt; Copy for FormItem&lt;'f&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'f&gt; Copy for FormParseError&lt;'f&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy, E:&nbsp;Copy, F:&nbsp;Copy&gt; Copy for Outcome&lt;S, E, F&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Environment","synthetic":false,"types":[]},{"text":"impl Copy for Kind","synthetic":false,"types":[]}];
implementors["rocket_http"] = [{"text":"impl Copy for Path","synthetic":false,"types":[]},{"text":"impl Copy for Query","synthetic":false,"types":[]},{"text":"impl Copy for Method","synthetic":false,"types":[]},{"text":"impl Copy for StatusClass","synthetic":false,"types":[]},{"text":"impl Copy for Status","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Copy for Buffer","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl&lt;E&gt; Copy for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Copy for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Copy for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl Copy for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Copy for Category","synthetic":false,"types":[]}];
implementors["siphasher"] = [{"text":"impl Copy for SipHasher13","synthetic":false,"types":[]},{"text":"impl Copy for SipHasher24","synthetic":false,"types":[]},{"text":"impl Copy for SipHasher","synthetic":false,"types":[]},{"text":"impl Copy for Hash128","synthetic":false,"types":[]},{"text":"impl Copy for SipHasher13","synthetic":false,"types":[]},{"text":"impl Copy for SipHasher24","synthetic":false,"types":[]},{"text":"impl Copy for SipHasher","synthetic":false,"types":[]}];
implementors["strum"] = [{"text":"impl Copy for ParseError","synthetic":false,"types":[]}];
implementors["subtle"] = [{"text":"impl Copy for Choice","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Copy for Underscore","synthetic":false,"types":[]},{"text":"impl Copy for Abstract","synthetic":false,"types":[]},{"text":"impl Copy for As","synthetic":false,"types":[]},{"text":"impl Copy for Async","synthetic":false,"types":[]},{"text":"impl Copy for Auto","synthetic":false,"types":[]},{"text":"impl Copy for Become","synthetic":false,"types":[]},{"text":"impl Copy for Box","synthetic":false,"types":[]},{"text":"impl Copy for Break","synthetic":false,"types":[]},{"text":"impl Copy for Const","synthetic":false,"types":[]},{"text":"impl Copy for Continue","synthetic":false,"types":[]},{"text":"impl Copy for Crate","synthetic":false,"types":[]},{"text":"impl Copy for Default","synthetic":false,"types":[]},{"text":"impl Copy for Do","synthetic":false,"types":[]},{"text":"impl Copy for Dyn","synthetic":false,"types":[]},{"text":"impl Copy for Else","synthetic":false,"types":[]},{"text":"impl Copy for Enum","synthetic":false,"types":[]},{"text":"impl Copy for Existential","synthetic":false,"types":[]},{"text":"impl Copy for Extern","synthetic":false,"types":[]},{"text":"impl Copy for Final","synthetic":false,"types":[]},{"text":"impl Copy for Fn","synthetic":false,"types":[]},{"text":"impl Copy for For","synthetic":false,"types":[]},{"text":"impl Copy for If","synthetic":false,"types":[]},{"text":"impl Copy for Impl","synthetic":false,"types":[]},{"text":"impl Copy for In","synthetic":false,"types":[]},{"text":"impl Copy for Let","synthetic":false,"types":[]},{"text":"impl Copy for Loop","synthetic":false,"types":[]},{"text":"impl Copy for Macro","synthetic":false,"types":[]},{"text":"impl Copy for Match","synthetic":false,"types":[]},{"text":"impl Copy for Mod","synthetic":false,"types":[]},{"text":"impl Copy for Move","synthetic":false,"types":[]},{"text":"impl Copy for Mut","synthetic":false,"types":[]},{"text":"impl Copy for Override","synthetic":false,"types":[]},{"text":"impl Copy for Priv","synthetic":false,"types":[]},{"text":"impl Copy for Pub","synthetic":false,"types":[]},{"text":"impl Copy for Ref","synthetic":false,"types":[]},{"text":"impl Copy for Return","synthetic":false,"types":[]},{"text":"impl Copy for SelfType","synthetic":false,"types":[]},{"text":"impl Copy for SelfValue","synthetic":false,"types":[]},{"text":"impl Copy for Static","synthetic":false,"types":[]},{"text":"impl Copy for Struct","synthetic":false,"types":[]},{"text":"impl Copy for Super","synthetic":false,"types":[]},{"text":"impl Copy for Trait","synthetic":false,"types":[]},{"text":"impl Copy for Try","synthetic":false,"types":[]},{"text":"impl Copy for Type","synthetic":false,"types":[]},{"text":"impl Copy for Typeof","synthetic":false,"types":[]},{"text":"impl Copy for Union","synthetic":false,"types":[]},{"text":"impl Copy for Unsafe","synthetic":false,"types":[]},{"text":"impl Copy for Unsized","synthetic":false,"types":[]},{"text":"impl Copy for Use","synthetic":false,"types":[]},{"text":"impl Copy for Virtual","synthetic":false,"types":[]},{"text":"impl Copy for Where","synthetic":false,"types":[]},{"text":"impl Copy for While","synthetic":false,"types":[]},{"text":"impl Copy for Yield","synthetic":false,"types":[]},{"text":"impl Copy for Add","synthetic":false,"types":[]},{"text":"impl Copy for AddEq","synthetic":false,"types":[]},{"text":"impl Copy for And","synthetic":false,"types":[]},{"text":"impl Copy for AndAnd","synthetic":false,"types":[]},{"text":"impl Copy for AndEq","synthetic":false,"types":[]},{"text":"impl Copy for At","synthetic":false,"types":[]},{"text":"impl Copy for Bang","synthetic":false,"types":[]},{"text":"impl Copy for Caret","synthetic":false,"types":[]},{"text":"impl Copy for CaretEq","synthetic":false,"types":[]},{"text":"impl Copy for Colon","synthetic":false,"types":[]},{"text":"impl Copy for Colon2","synthetic":false,"types":[]},{"text":"impl Copy for Comma","synthetic":false,"types":[]},{"text":"impl Copy for Div","synthetic":false,"types":[]},{"text":"impl Copy for DivEq","synthetic":false,"types":[]},{"text":"impl Copy for Dollar","synthetic":false,"types":[]},{"text":"impl Copy for Dot","synthetic":false,"types":[]},{"text":"impl Copy for Dot2","synthetic":false,"types":[]},{"text":"impl Copy for Dot3","synthetic":false,"types":[]},{"text":"impl Copy for DotDotEq","synthetic":false,"types":[]},{"text":"impl Copy for Eq","synthetic":false,"types":[]},{"text":"impl Copy for EqEq","synthetic":false,"types":[]},{"text":"impl Copy for Ge","synthetic":false,"types":[]},{"text":"impl Copy for Gt","synthetic":false,"types":[]},{"text":"impl Copy for Le","synthetic":false,"types":[]},{"text":"impl Copy for Lt","synthetic":false,"types":[]},{"text":"impl Copy for MulEq","synthetic":false,"types":[]},{"text":"impl Copy for Ne","synthetic":false,"types":[]},{"text":"impl Copy for Or","synthetic":false,"types":[]},{"text":"impl Copy for OrEq","synthetic":false,"types":[]},{"text":"impl Copy for OrOr","synthetic":false,"types":[]},{"text":"impl Copy for Pound","synthetic":false,"types":[]},{"text":"impl Copy for Question","synthetic":false,"types":[]},{"text":"impl Copy for RArrow","synthetic":false,"types":[]},{"text":"impl Copy for LArrow","synthetic":false,"types":[]},{"text":"impl Copy for Rem","synthetic":false,"types":[]},{"text":"impl Copy for RemEq","synthetic":false,"types":[]},{"text":"impl Copy for FatArrow","synthetic":false,"types":[]},{"text":"impl Copy for Semi","synthetic":false,"types":[]},{"text":"impl Copy for Shl","synthetic":false,"types":[]},{"text":"impl Copy for ShlEq","synthetic":false,"types":[]},{"text":"impl Copy for Shr","synthetic":false,"types":[]},{"text":"impl Copy for ShrEq","synthetic":false,"types":[]},{"text":"impl Copy for Star","synthetic":false,"types":[]},{"text":"impl Copy for Sub","synthetic":false,"types":[]},{"text":"impl Copy for SubEq","synthetic":false,"types":[]},{"text":"impl Copy for Tilde","synthetic":false,"types":[]},{"text":"impl Copy for Brace","synthetic":false,"types":[]},{"text":"impl Copy for Bracket","synthetic":false,"types":[]},{"text":"impl Copy for Paren","synthetic":false,"types":[]},{"text":"impl Copy for Group","synthetic":false,"types":[]},{"text":"impl Copy for AttrStyle","synthetic":false,"types":[]},{"text":"impl Copy for RangeLimits","synthetic":false,"types":[]},{"text":"impl Copy for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Copy for BinOp","synthetic":false,"types":[]},{"text":"impl Copy for UnOp","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Copy for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]}];
implementors["time"] = [{"text":"impl Copy for Duration","synthetic":false,"types":[]},{"text":"impl Copy for OutOfRangeError","synthetic":false,"types":[]},{"text":"impl Copy for Timespec","synthetic":false,"types":[]},{"text":"impl Copy for PreciseTime","synthetic":false,"types":[]},{"text":"impl Copy for SteadyTime","synthetic":false,"types":[]},{"text":"impl Copy for Tm","synthetic":false,"types":[]},{"text":"impl Copy for ParseError","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Copy + Array&gt; Copy for ArrayVec&lt;A&gt;","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl Copy for B0","synthetic":false,"types":[]},{"text":"impl Copy for B1","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Copy + Unsigned + NonZero&gt; Copy for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Copy + Unsigned + NonZero&gt; Copy for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Z0","synthetic":false,"types":[]},{"text":"impl Copy for UTerm","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Copy, B:&nbsp;Copy&gt; Copy for UInt&lt;U, B&gt;","synthetic":false,"types":[]},{"text":"impl Copy for ATerm","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;Copy, A:&nbsp;Copy&gt; Copy for TArr&lt;V, A&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Greater","synthetic":false,"types":[]},{"text":"impl Copy for Less","synthetic":false,"types":[]},{"text":"impl Copy for Equal","synthetic":false,"types":[]}];
implementors["unicase"] = [{"text":"impl&lt;S:&nbsp;Copy&gt; Copy for UniCase&lt;S&gt;","synthetic":false,"types":[]}];
implementors["unicode_bidi"] = [{"text":"impl Copy for Level","synthetic":false,"types":[]},{"text":"impl Copy for BidiClass","synthetic":false,"types":[]}];
implementors["universal_hash"] = [{"text":"impl Copy for Error","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for SyntaxViolation","synthetic":false,"types":[]},{"text":"impl Copy for Position","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for ParseOptions&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["uuid"] = [{"text":"impl Copy for Hyphenated","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for HyphenatedRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Simple","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for SimpleRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Urn","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Copy for UrnRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Expected","synthetic":false,"types":[]},{"text":"impl Copy for ParseError","synthetic":false,"types":[]},{"text":"impl Copy for BytesError","synthetic":false,"types":[]},{"text":"impl Copy for Error","synthetic":false,"types":[]},{"text":"impl Copy for Version","synthetic":false,"types":[]},{"text":"impl Copy for Variant","synthetic":false,"types":[]},{"text":"impl Copy for Uuid","synthetic":false,"types":[]}];
implementors["yansi"] = [{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Paint&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Copy for Style","synthetic":false,"types":[]},{"text":"impl Copy for Color","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()