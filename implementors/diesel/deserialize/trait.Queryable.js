(function() {var implementors = {};
implementors["amelio"] = [{"text":"impl&lt;__DB:&nbsp;<a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>, __ST&gt; <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt; for <a class=\"struct\" href=\"amelio/db/models/struct.UserEntity.html\" title=\"struct amelio::db::models::UserEntity\">UserEntity</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>: <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt;,&nbsp;</span>","synthetic":false,"types":["amelio::db::models::UserEntity"]},{"text":"impl&lt;__DB:&nbsp;<a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>, __ST&gt; <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt; for <a class=\"struct\" href=\"amelio/db/models/struct.CourseEntity.html\" title=\"struct amelio::db::models::CourseEntity\">CourseEntity</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>: <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt;,&nbsp;</span>","synthetic":false,"types":["amelio::db::models::CourseEntity"]},{"text":"impl&lt;__DB:&nbsp;<a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>, __ST&gt; <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt; for <a class=\"struct\" href=\"amelio/db/models/struct.TicketEntity.html\" title=\"struct amelio::db::models::TicketEntity\">TicketEntity</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>: <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt;,&nbsp;</span>","synthetic":false,"types":["amelio::db::models::TicketEntity"]},{"text":"impl&lt;__DB:&nbsp;<a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>, __ST&gt; <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt; for <a class=\"struct\" href=\"amelio/db/models/struct.MediumTextEntity.html\" title=\"struct amelio::db::models::MediumTextEntity\">MediumTextEntity</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>: <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt;,&nbsp;</span>","synthetic":false,"types":["amelio::db::models::MediumTextEntity"]},{"text":"impl&lt;__DB:&nbsp;<a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>, __ST&gt; <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt; for <a class=\"struct\" href=\"amelio/db/models/struct.MediumRecordingEntity.html\" title=\"struct amelio::db::models::MediumRecordingEntity\">MediumRecordingEntity</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>: <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt;,&nbsp;</span>","synthetic":false,"types":["amelio::db::models::MediumRecordingEntity"]},{"text":"impl&lt;__DB:&nbsp;<a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>, __ST&gt; <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt; for <a class=\"struct\" href=\"amelio/db/models/struct.MediumInteractiveEntity.html\" title=\"struct amelio::db::models::MediumInteractiveEntity\">MediumInteractiveEntity</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>: <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt;,&nbsp;</span>","synthetic":false,"types":["amelio::db::models::MediumInteractiveEntity"]},{"text":"impl&lt;__DB:&nbsp;<a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>, __ST&gt; <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt; for <a class=\"struct\" href=\"amelio/db/models/struct.MediumQuestionaireEntity.html\" title=\"struct amelio::db::models::MediumQuestionaireEntity\">MediumQuestionaireEntity</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>: <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt;,&nbsp;</span>","synthetic":false,"types":["amelio::db::models::MediumQuestionaireEntity"]},{"text":"impl&lt;__DB:&nbsp;<a class=\"trait\" href=\"diesel/backend/trait.Backend.html\" title=\"trait diesel::backend::Backend\">Backend</a>, __ST&gt; <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt; for <a class=\"struct\" href=\"amelio/db/models/struct.CommentEntity.html\" title=\"struct amelio::db::models::CommentEntity\">CommentEntity</a> <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>: <a class=\"trait\" href=\"diesel/deserialize/trait.Queryable.html\" title=\"trait diesel::deserialize::Queryable\">Queryable</a>&lt;__ST, __DB&gt;,&nbsp;</span>","synthetic":false,"types":["amelio::db::models::CommentEntity"]}];
implementors["diesel"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()