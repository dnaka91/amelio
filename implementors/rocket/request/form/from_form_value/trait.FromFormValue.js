(function() {var implementors = {};
implementors["amelio"] = [{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"enum\" href=\"amelio/models/enum.Role.html\" title=\"enum amelio::models::Role\">Role</a>","synthetic":false,"types":["amelio::models::Role"]},{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"enum\" href=\"amelio/models/enum.TicketType.html\" title=\"enum amelio::models::TicketType\">TicketType</a>","synthetic":false,"types":["amelio::models::TicketType"]},{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"enum\" href=\"amelio/models/enum.Category.html\" title=\"enum amelio::models::Category\">Category</a>","synthetic":false,"types":["amelio::models::Category"]},{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"enum\" href=\"amelio/models/enum.Priority.html\" title=\"enum amelio::models::Priority\">Priority</a>","synthetic":false,"types":["amelio::models::Priority"]},{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"enum\" href=\"amelio/models/enum.Status.html\" title=\"enum amelio::models::Status\">Status</a>","synthetic":false,"types":["amelio::models::Status"]},{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"struct\" href=\"amelio/routes/struct.NonEmptyString.html\" title=\"struct amelio::routes::NonEmptyString\">NonEmptyString</a>","synthetic":false,"types":["amelio::routes::NonEmptyString"]},{"text":"impl&lt;'v, N:&nbsp;<a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/str/trait.FromStr.html\" title=\"trait core::str::FromStr\">FromStr</a>&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"struct\" href=\"amelio/routes/struct.PositiveNum.html\" title=\"struct amelio::routes::PositiveNum\">PositiveNum</a>&lt;N&gt;","synthetic":false,"types":["amelio::routes::PositiveNum"]},{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"struct\" href=\"amelio/routes/struct.Hour.html\" title=\"struct amelio::routes::Hour\">Hour</a>","synthetic":false,"types":["amelio::routes::Hour"]},{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"struct\" href=\"amelio/routes/struct.Minute.html\" title=\"struct amelio::routes::Minute\">Minute</a>","synthetic":false,"types":["amelio::routes::Minute"]},{"text":"impl&lt;'v&gt; <a class=\"trait\" href=\"rocket/request/form/from_form_value/trait.FromFormValue.html\" title=\"trait rocket::request::form::from_form_value::FromFormValue\">FromFormValue</a>&lt;'v&gt; for <a class=\"struct\" href=\"amelio/routes/struct.ValidUrl.html\" title=\"struct amelio::routes::ValidUrl\">ValidUrl</a>","synthetic":false,"types":["amelio::routes::ValidUrl"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()